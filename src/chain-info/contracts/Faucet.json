{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_smtAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setFaucetDripAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddr",
          "type": "address"
        }
      ],
      "name": "setTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Faucet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Faucet.sol",
    "exportedSymbols": {
      "Faucet": [
        178
      ],
      "IERC20": [
        26
      ]
    },
    "id": 179,
    "license": "UNLISCENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 26,
        "linearizedBaseContracts": [
          26
        ],
        "name": "IERC20",
        "nameLocation": "76:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "95:62:0",
              "text": " @dev returns the tokens owned by `account`."
            },
            "functionSelector": "70a08231",
            "id": 9,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "171:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "189:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "181:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "180:17:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "221:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "220:9:0"
            },
            "scope": 26,
            "src": "162:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 10,
              "nodeType": "StructuredDocumentation",
              "src": "237:61:0",
              "text": " @dev returns the decimal places of a token"
            },
            "functionSelector": "313ce567",
            "id": 15,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "312:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "346:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "345:7:0"
            },
            "scope": 26,
            "src": "303:50:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 16,
              "nodeType": "StructuredDocumentation",
              "src": "359:221:0",
              "text": " @dev transfers the `amount` of tokens from caller's account\n to the `recipient` account.\n returns boolean value indicating the operation status.\n Emits a {Transfer} event"
            },
            "functionSelector": "a9059cbb",
            "id": 25,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "594:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "611:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "603:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "630:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "622:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:35:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "672:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "671:6:0"
            },
            "scope": 26,
            "src": "585:93:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 179,
        "src": "66:616:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 178,
        "linearizedBaseContracts": [
          178
        ],
        "name": "Faucet",
        "nameLocation": "693:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "760:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "753:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$26",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 28,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26,
                "src": "753:6:0"
              },
              "referencedDeclaration": 26,
              "src": "753:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$26",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 31,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "823:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "815:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "815:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "nextRequestAt",
            "nameLocation": "890:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "864:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 34,
              "keyType": {
                "id": 32,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "872:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "864:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 33,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "881:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "faucetDripAmount",
            "nameLocation": "965:16:0",
            "nodeType": "VariableDeclaration",
            "scope": 178,
            "src": "957:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "957:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "984:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "1117:75:0",
              "statements": [
                {
                  "expression": {
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1127:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$26",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47,
                          "name": "_smtAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1142:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1135:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$26_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 48,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1135:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$26",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1127:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$26",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1127:27:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1164:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_ownerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1172:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1164:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:21:0"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_smtAddress",
                  "nameLocation": "1081:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1073:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "_ownerAddress",
                  "nameLocation": "1102:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "1094:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:44:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1117:0:0"
            },
            "scope": 178,
            "src": "1060:132:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "1272:88:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1290:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1290:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 61,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1304:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1290:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365744572726f723a2043616c6c6572206e6f74206f776e6572",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1310:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_30c8c8e6dc0ec3a1436c0866404b1f89930c3b7b4ceb73a9886ce61bf413d312",
                          "typeString": "literal_string \"FaucetError: Caller not owner\""
                        },
                        "value": "FaucetError: Caller not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_30c8c8e6dc0ec3a1436c0866404b1f89930c3b7b4ceb73a9886ce61bf413d312",
                          "typeString": "literal_string \"FaucetError: Caller not owner\""
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1282:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:60:0"
                },
                {
                  "id": 66,
                  "nodeType": "PlaceholderStatement",
                  "src": "1352:1:0"
                }
              ]
            },
            "id": 68,
            "name": "onlyOwner",
            "nameLocation": "1263:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1272:0:0"
            },
            "src": "1254:106:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1443:420:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 76,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1485:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$178",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$178",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1477:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 74,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1477:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1477:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 72,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1461:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$26",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "1461:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1461:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1494:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1461:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365744572726f723a20456d707479",
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9504be7480dcf33c07151efb4cd6c65de4199f154b19adf76978e8b261ac6fd",
                          "typeString": "literal_string \"FaucetError: Empty\""
                        },
                        "value": "FaucetError: Empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9504be7480dcf33c07151efb4cd6c65de4199f154b19adf76978e8b261ac6fd",
                          "typeString": "literal_string \"FaucetError: Empty\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1453:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:64:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 85,
                            "name": "nextRequestAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "1535:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 88,
                          "indexExpression": {
                            "expression": {
                              "id": 86,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1549:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1549:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1535:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 89,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1563:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1563:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1535:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365744572726f723a2054727920616761696e206c61746572",
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1580:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81aab61ce500c97fd7587c8db82e55c9a5b02ae3fa73c9fea7d5cfcb6207c4f2",
                          "typeString": "literal_string \"FaucetError: Try again later\""
                        },
                        "value": "FaucetError: Try again later"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81aab61ce500c97fd7587c8db82e55c9a5b02ae3fa73c9fea7d5cfcb6207c4f2",
                          "typeString": "literal_string \"FaucetError: Try again later\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1527:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1527:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1527:84:0"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 95,
                        "name": "nextRequestAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1713:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 98,
                      "indexExpression": {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1727:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1727:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1713:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 99,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1741:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1741:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "hexValue": "35",
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1760:9:0",
                            "subdenomination": "minutes",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_300_by_1",
                              "typeString": "int_const 300"
                            },
                            "value": "5"
                          }
                        ],
                        "id": 102,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1759:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_300_by_1",
                          "typeString": "int_const 300"
                        }
                      },
                      "src": "1741:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1713:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1805:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1805:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 111,
                          "name": "faucetDripAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "1816:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1835:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 113,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29,
                                "src": "1839:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$26",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15,
                              "src": "1839:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1839:16:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1835:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1816:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 106,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "1790:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "1790:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1790:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1790:66:0"
                }
              ]
            },
            "functionSelector": "b46300ec",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "1427:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:2:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1443:0:0"
            },
            "scope": 178,
            "src": "1418:445:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "1984:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1994:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$26",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 130,
                          "name": "_tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123,
                          "src": "2009:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 129,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2002:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$26_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2002:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$26",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1994:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$26",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1994:26:0"
                }
              ]
            },
            "functionSelector": "26a4e8d2",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "1974:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1974:9:0"
              }
            ],
            "name": "setTokenAddress",
            "nameLocation": "1929:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "_tokenAddr",
                  "nameLocation": "1953:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "1945:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1944:20:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1984:0:0"
            },
            "scope": 178,
            "src": "1920:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2136:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 142,
                      "name": "faucetDripAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2146:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 143,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "2165:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2146:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:26:0"
                }
              ]
            },
            "functionSelector": "1a0c069a",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 139,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "2126:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2126:9:0"
              }
            ],
            "name": "setFaucetDripAmount",
            "nameLocation": "2080:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2108:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2100:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2099:17:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2136:0:0"
            },
            "scope": 178,
            "src": "2071:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "2341:144:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 161,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2383:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Faucet_$178",
                                    "typeString": "contract Faucet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Faucet_$178",
                                    "typeString": "contract Faucet"
                                  }
                                ],
                                "id": 160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2375:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 159,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2375:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2375:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 157,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2359:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$26",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "2359:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2359:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 164,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151,
                          "src": "2393:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2359:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4661756365744572726f723a20496e73756666696369656e742066756e6473",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2401:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e1ca61c12a725dc194fc9a36250cb00134b4caf42784efe65eb138c2c92504d",
                          "typeString": "literal_string \"FaucetError: Insufficient funds\""
                        },
                        "value": "FaucetError: Insufficient funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e1ca61c12a725dc194fc9a36250cb00134b4caf42784efe65eb138c2c92504d",
                          "typeString": "literal_string \"FaucetError: Insufficient funds\""
                        }
                      ],
                      "id": 156,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2351:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:84:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2351:84:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 172,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2460:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "2470:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 169,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2445:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$26",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25,
                      "src": "2445:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2445:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "2445:33:0"
                }
              ]
            },
            "functionSelector": "06b091f9",
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68,
                  "src": "2331:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2331:9:0"
              }
            ],
            "name": "withdrawTokens",
            "nameLocation": "2271:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "2294:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2286:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2286:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2313:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "2305:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2285:36:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2341:0:0"
            },
            "scope": 178,
            "src": "2262:223:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 179,
        "src": "684:1807:0",
        "usedErrors": []
      }
    ],
    "src": "41:2455:0"
  },
  "bytecode": "6080604052600160035534801561001557600080fd5b506040516107f23803806107f283398101604081905261003491610081565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100b4565b80516001600160a01b038116811461007c57600080fd5b919050565b6000806040838503121561009457600080fd5b61009d83610065565b91506100ab60208401610065565b90509250929050565b61072f806100c36000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306b091f9146100515780631a0c069a1461006657806326a4e8d214610079578063b46300ec1461008c575b600080fd5b61006461005f3660046104bd565b610094565b005b6100646100743660046104e7565b6101fd565b610064610087366004610500565b61022c565b610064610278565b6001546001600160a01b031633146100c75760405162461bcd60e51b81526004016100be90610522565b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610559565b10156101815760405162461bcd60e51b815260206004820152601f60248201527f4661756365744572726f723a20496e73756666696369656e742066756e64730060448201526064016100be565b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190610572565b505050565b6001546001600160a01b031633146102275760405162461bcd60e51b81526004016100be90610522565b600355565b6001546001600160a01b031633146102565760405162461bcd60e51b81526004016100be90610522565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546040516370a0823160e01b81523060048201526001916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610559565b116103275760405162461bcd60e51b81526020600482015260126024820152714661756365744572726f723a20456d70747960701b60448201526064016100be565b3360009081526002602052604090205442116103855760405162461bcd60e51b815260206004820152601c60248201527f4661756365744572726f723a2054727920616761696e206c617465720000000060448201526064016100be565b6103914261012c6105aa565b336000818152600260209081526040808320949094559054835163313ce56760e01b815293516001600160a01b039091169363a9059cbb9392859263313ce5679260048082019392918290030181865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041791906105c2565b61042290600a6106cb565b60035461042f91906106da565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190610572565b50565b80356001600160a01b03811681146104b857600080fd5b919050565b600080604083850312156104d057600080fd5b6104d9836104a1565b946020939093013593505050565b6000602082840312156104f957600080fd5b5035919050565b60006020828403121561051257600080fd5b61051b826104a1565b9392505050565b6020808252601d908201527f4661756365744572726f723a2043616c6c6572206e6f74206f776e6572000000604082015260600190565b60006020828403121561056b57600080fd5b5051919050565b60006020828403121561058457600080fd5b8151801515811461051b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156105bd576105bd610594565b500190565b6000602082840312156105d457600080fd5b815160ff8116811461051b57600080fd5b600181815b8085111561062057816000190482111561060657610606610594565b8085161561061357918102915b93841c93908002906105ea565b509250929050565b600082610637575060016106c5565b81610644575060006106c5565b816001811461065a576002811461066457610680565b60019150506106c5565b60ff84111561067557610675610594565b50506001821b6106c5565b5060208310610133831016604e8410600b84101617156106a3575081810a6106c5565b6106ad83836105e5565b80600019048211156106c1576106c1610594565b0290505b92915050565b600061051b60ff841683610628565b60008160001904831182151516156106f4576106f4610594565b50029056fea26469706673582212207f3f8c11781c3f330c1929b51614aae7c15065037fb5675ad8c0900a8a72ad0664736f6c634300080b0033",
  "bytecodeSha1": "5fcef2f25cae1e471e140ee13c0f70a9dea23f30",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Faucet",
  "coverageMap": {
    "branches": {
      "0": {
        "Faucet.send": {
          "9": [
            1461,
            1495,
            true
          ]
        },
        "Faucet.withdrawTokens": {
          "8": [
            2359,
            2400,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Faucet.send": {
          "4": [
            1453,
            1517
          ],
          "5": [
            1527,
            1611
          ],
          "6": [
            1713,
            1770
          ],
          "7": [
            1790,
            1856
          ]
        },
        "Faucet.setFaucetDripAmount": {
          "2": [
            2146,
            2172
          ]
        },
        "Faucet.setTokenAddress": {
          "3": [
            1994,
            2020
          ]
        },
        "Faucet.withdrawTokens": {
          "0": [
            2351,
            2435
          ],
          "1": [
            2445,
            2478
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806306b091f9146100515780631a0c069a1461006657806326a4e8d214610079578063b46300ec1461008c575b600080fd5b61006461005f3660046104bd565b610094565b005b6100646100743660046104e7565b6101fd565b610064610087366004610500565b61022c565b610064610278565b6001546001600160a01b031633146100c75760405162461bcd60e51b81526004016100be90610522565b60405180910390fd5b6000546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561010f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101339190610559565b10156101815760405162461bcd60e51b815260206004820152601f60248201527f4661756365744572726f723a20496e73756666696369656e742066756e64730060448201526064016100be565b60005460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af11580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190610572565b505050565b6001546001600160a01b031633146102275760405162461bcd60e51b81526004016100be90610522565b600355565b6001546001600160a01b031633146102565760405162461bcd60e51b81526004016100be90610522565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546040516370a0823160e01b81523060048201526001916001600160a01b0316906370a0823190602401602060405180830381865afa1580156102c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e59190610559565b116103275760405162461bcd60e51b81526020600482015260126024820152714661756365744572726f723a20456d70747960701b60448201526064016100be565b3360009081526002602052604090205442116103855760405162461bcd60e51b815260206004820152601c60248201527f4661756365744572726f723a2054727920616761696e206c617465720000000060448201526064016100be565b6103914261012c6105aa565b336000818152600260209081526040808320949094559054835163313ce56760e01b815293516001600160a01b039091169363a9059cbb9392859263313ce5679260048082019392918290030181865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041791906105c2565b61042290600a6106cb565b60035461042f91906106da565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561047a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049e9190610572565b50565b80356001600160a01b03811681146104b857600080fd5b919050565b600080604083850312156104d057600080fd5b6104d9836104a1565b946020939093013593505050565b6000602082840312156104f957600080fd5b5035919050565b60006020828403121561051257600080fd5b61051b826104a1565b9392505050565b6020808252601d908201527f4661756365744572726f723a2043616c6c6572206e6f74206f776e6572000000604082015260600190565b60006020828403121561056b57600080fd5b5051919050565b60006020828403121561058457600080fd5b8151801515811461051b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156105bd576105bd610594565b500190565b6000602082840312156105d457600080fd5b815160ff8116811461051b57600080fd5b600181815b8085111561062057816000190482111561060657610606610594565b8085161561061357918102915b93841c93908002906105ea565b509250929050565b600082610637575060016106c5565b81610644575060006106c5565b816001811461065a576002811461066457610680565b60019150506106c5565b60ff84111561067557610675610594565b50506001821b6106c5565b5060208310610133831016604e8410600b84101617156106a3575081810a6106c5565b6106ad83836105e5565b80600019048211156106c1576106c1610594565b0290505b92915050565b600061051b60ff841683610628565b60008160001904831182151516156106f4576106f4610594565b50029056fea26469706673582212207f3f8c11781c3f330c1929b51614aae7c15065037fb5675ad8c0900a8a72ad0664736f6c634300080b0033",
  "deployedSourceMap": "684:1807:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:223;;;;;;:::i;:::-;;:::i;:::-;;2071:108;;;;;;:::i;:::-;;:::i;1920:107::-;;;;;;:::i;:::-;;:::i;1418:445::-;;;:::i;2262:223::-;1304:5;;-1:-1:-1;;;;;1304:5:0;1290:10;:19;1282:60;;;;-1:-1:-1;;;1282:60:0;;;;;;;:::i;:::-;;;;;;;;;2359:5:::1;::::0;:30:::1;::::0;-1:-1:-1;;;2359:30:0;;2383:4:::1;2359:30;::::0;::::1;1331:51:1::0;2393:7:0;;-1:-1:-1;;;;;2359:5:0::1;::::0;:15:::1;::::0;1304:18:1;;2359:30:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2351:84;;;::::0;-1:-1:-1;;;2351:84:0;;1784:2:1;2351:84:0::1;::::0;::::1;1766:21:1::0;1823:2;1803:18;;;1796:30;1862:33;1842:18;;;1835:61;1913:18;;2351:84:0::1;1582:355:1::0;2351:84:0::1;2445:5;::::0;:33:::1;::::0;-1:-1:-1;;;2445:33:0;;-1:-1:-1;;;;;2134:32:1;;;2445:33:0::1;::::0;::::1;2116:51:1::0;2183:18;;;2176:34;;;2445:5:0;;::::1;::::0;:14:::1;::::0;2089:18:1;;2445:33:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2262:223:::0;;:::o;2071:108::-;1304:5;;-1:-1:-1;;;;;1304:5:0;1290:10;:19;1282:60;;;;-1:-1:-1;;;1282:60:0;;;;;;;:::i;:::-;2146:16:::1;:26:::0;2071:108::o;1920:107::-;1304:5;;-1:-1:-1;;;;;1304:5:0;1290:10;:19;1282:60;;;;-1:-1:-1;;;1282:60:0;;;;;;;:::i;:::-;1994:5:::1;:26:::0;;-1:-1:-1;;;;;;1994:26:0::1;-1:-1:-1::0;;;;;1994:26:0;;;::::1;::::0;;;::::1;::::0;;1920:107::o;1418:445::-;1461:5;;:30;;-1:-1:-1;;;1461:30:0;;1485:4;1461:30;;;1331:51:1;1494:1:0;;-1:-1:-1;;;;;1461:5:0;;:15;;1304:18:1;;1461:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;1453:64;;;;-1:-1:-1;;;1453:64:0;;2705:2:1;1453:64:0;;;2687:21:1;2744:2;2724:18;;;2717:30;-1:-1:-1;;;2763:18:1;;;2756:48;2821:18;;1453:64:0;2503:342:1;1453:64:0;1549:10;1535:25;;;;:13;:25;;;;;;1563:15;-1:-1:-1;1527:84:0;;;;-1:-1:-1;;;1527:84:0;;3052:2:1;1527:84:0;;;3034:21:1;3091:2;3071:18;;;3064:30;3130;3110:18;;;3103:58;3178:18;;1527:84:0;2850:352:1;1527:84:0;1741:29;:15;1760:9;1741:29;:::i;:::-;1727:10;1713:25;;;;:13;:25;;;;;;;;:57;;;;1790:5;;1839:16;;-1:-1:-1;;;1839:16:0;;;;-1:-1:-1;;;;;1790:5:0;;;;:14;;1727:10;1790:5;;1839:14;;:16;;;;;1713:25;1839:16;;;;;;1790:5;1839:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1835:20;;:2;:20;:::i;:::-;1816:16;;:39;;;;:::i;:::-;1790:66;;-1:-1:-1;;;;;;1790:66:0;;;;;;;-1:-1:-1;;;;;2134:32:1;;;1790:66:0;;;2116:51:1;2183:18;;;2176:34;2089:18;;1790:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1418:445::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;451:180::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;-1:-1:-1;602:23:1;;451:180;-1:-1:-1;451:180:1:o;636:186::-;695:6;748:2;736:9;727:7;723:23;719:32;716:52;;;764:1;761;754:12;716:52;787:29;806:9;787:29;:::i;:::-;777:39;636:186;-1:-1:-1;;;636:186:1:o;827:353::-;1029:2;1011:21;;;1068:2;1048:18;;;1041:30;1107:31;1102:2;1087:18;;1080:59;1171:2;1156:18;;827:353::o;1393:184::-;1463:6;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;-1:-1:-1;1555:16:1;;1393:184;-1:-1:-1;1393:184:1:o;2221:277::-;2288:6;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2389:9;2383:16;2442:5;2435:13;2428:21;2421:5;2418:32;2408:60;;2464:1;2461;2454:12;3207:127;3268:10;3263:3;3259:20;3256:1;3249:31;3299:4;3296:1;3289:15;3323:4;3320:1;3313:15;3339:128;3379:3;3410:1;3406:6;3403:1;3400:13;3397:39;;;3416:18;;:::i;:::-;-1:-1:-1;3452:9:1;;3339:128::o;3472:273::-;3540:6;3593:2;3581:9;3572:7;3568:23;3564:32;3561:52;;;3609:1;3606;3599:12;3561:52;3641:9;3635:16;3691:4;3684:5;3680:16;3673:5;3670:27;3660:55;;3711:1;3708;3701:12;3750:422;3839:1;3882:5;3839:1;3896:270;3917:7;3907:8;3904:21;3896:270;;;3976:4;3972:1;3968:6;3964:17;3958:4;3955:27;3952:53;;;3985:18;;:::i;:::-;4035:7;4025:8;4021:22;4018:55;;;4055:16;;;;4018:55;4134:22;;;;4094:15;;;;3896:270;;;3900:3;3750:422;;;;;:::o;4177:806::-;4226:5;4256:8;4246:80;;-1:-1:-1;4297:1:1;4311:5;;4246:80;4345:4;4335:76;;-1:-1:-1;4382:1:1;4396:5;;4335:76;4427:4;4445:1;4440:59;;;;4513:1;4508:130;;;;4420:218;;4440:59;4470:1;4461:10;;4484:5;;;4508:130;4545:3;4535:8;4532:17;4529:43;;;4552:18;;:::i;:::-;-1:-1:-1;;4608:1:1;4594:16;;4623:5;;4420:218;;4722:2;4712:8;4709:16;4703:3;4697:4;4694:13;4690:36;4684:2;4674:8;4671:16;4666:2;4660:4;4657:12;4653:35;4650:77;4647:159;;;-1:-1:-1;4759:19:1;;;4791:5;;4647:159;4838:34;4863:8;4857:4;4838:34;:::i;:::-;4908:6;4904:1;4900:6;4896:19;4887:7;4884:32;4881:58;;;4919:18;;:::i;:::-;4957:20;;-1:-1:-1;4177:806:1;;;;;:::o;4988:140::-;5046:5;5075:47;5116:4;5106:8;5102:19;5096:4;5075:47;:::i;5133:168::-;5173:7;5239:1;5235;5231:6;5227:14;5224:1;5221:21;5216:1;5209:9;5202:17;5198:45;5195:71;;;5246:18;;:::i;:::-;-1:-1:-1;5286:9:1;;5133:168::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    684,
    2491
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x1A0C069A EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x26A4E8D2 EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xB46300EC EQ PUSH2 0x8C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64 PUSH2 0x74 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x64 PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH2 0x64 PUSH2 0x278 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST LT ISZERO PUSH2 0x181 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661756365744572726F723A20496E73756666696369656E742066756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x227 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x559 JUMP JUMPDEST GT PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4661756365744572726F723A20456D707479 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661756365744572726F723A2054727920616761696E206C6174657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBE JUMP JUMPDEST PUSH2 0x391 TIMESTAMP PUSH2 0x12C PUSH2 0x5AA JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP1 SLOAD DUP4 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 PUSH4 0xA9059CBB SWAP4 SWAP3 DUP6 SWAP3 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x5C2 JUMP JUMPDEST PUSH2 0x422 SWAP1 PUSH1 0xA PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x42F SWAP2 SWAP1 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x47A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x572 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D9 DUP4 PUSH2 0x4A1 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51B DUP3 PUSH2 0x4A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1D SWAP1 DUP3 ADD MSTORE PUSH32 0x4661756365744572726F723A2043616C6C6572206E6F74206F776E6572000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x5BD PUSH2 0x594 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x620 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x606 JUMPI PUSH2 0x606 PUSH2 0x594 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x613 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x5EA JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x637 JUMPI POP PUSH1 0x1 PUSH2 0x6C5 JUMP JUMPDEST DUP2 PUSH2 0x644 JUMPI POP PUSH1 0x0 PUSH2 0x6C5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x65A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x664 JUMPI PUSH2 0x680 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x675 JUMPI PUSH2 0x675 PUSH2 0x594 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6C5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x6A3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x6AD DUP4 DUP4 PUSH2 0x5E5 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x6C1 JUMPI PUSH2 0x6C1 PUSH2 0x594 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x51B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x628 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6F4 JUMPI PUSH2 0x6F4 PUSH2 0x594 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x3F8C11781C3F330C1929B51614AAE7C15065037FB5675AD8C0900A8A72AD0664 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6B091F9"
    },
    "38": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1A0C069A"
    },
    "49": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26A4E8D2"
    },
    "60": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79"
    },
    "64": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB46300EC"
    },
    "71": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "75": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        684,
        2491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "81": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "85": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F"
    },
    "88": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "89": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "91": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "94": {
      "fn": "Faucet.withdrawTokens",
      "jump": "i",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "95": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "96": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94"
    },
    "99": {
      "fn": "Faucet.withdrawTokens",
      "jump": "i",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "100": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "STOP",
      "path": "0"
    },
    "102": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "106": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x74"
    },
    "109": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "110": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "112": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E7"
    },
    "115": {
      "fn": "Faucet.setFaucetDripAmount",
      "jump": "i",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "116": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "117": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "120": {
      "fn": "Faucet.setFaucetDripAmount",
      "jump": "i",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "121": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "122": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "125": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87"
    },
    "128": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "129": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "131": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x500"
    },
    "134": {
      "fn": "Faucet.setTokenAddress",
      "jump": "i",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "135": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "136": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22C"
    },
    "139": {
      "fn": "Faucet.setTokenAddress",
      "jump": "i",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "140": {
      "fn": "Faucet.send",
      "offset": [
        1418,
        1863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": "Faucet.send",
      "offset": [
        1418,
        1863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "144": {
      "fn": "Faucet.send",
      "offset": [
        1418,
        1863
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278"
    },
    "147": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1418,
        1863
      ],
      "op": "JUMP",
      "path": "0"
    },
    "148": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "149": {
      "offset": [
        1304,
        1309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "151": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1304,
        1309
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "158": {
      "op": "SHL"
    },
    "159": {
      "op": "SUB"
    },
    "160": {
      "offset": [
        1304,
        1309
      ],
      "op": "AND",
      "path": "0"
    },
    "161": {
      "offset": [
        1290,
        1300
      ],
      "op": "CALLER",
      "path": "0"
    },
    "162": {
      "offset": [
        1290,
        1309
      ],
      "op": "EQ",
      "path": "0"
    },
    "163": {
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7"
    },
    "166": {
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "167": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "169": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "170": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "174": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "176": {
      "op": "SHL"
    },
    "177": {
      "offset": [
        1282,
        1342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "178": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "179": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "181": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "ADD",
      "path": "0"
    },
    "182": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "185": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "186": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x522"
    },
    "189": {
      "fn": "Faucet.withdrawTokens",
      "jump": "i",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "190": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "191": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "193": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "194": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "196": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "SUB",
      "path": "0"
    },
    "197": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "198": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "199": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "200": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2364
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "202": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2364
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "203": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "205": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "206": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "213": {
      "op": "SHL"
    },
    "214": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "215": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "216": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2383,
        2387
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "217": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "219": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP3",
      "path": "0"
    },
    "220": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "221": {
      "op": "MSTORE"
    },
    "222": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2393,
        2400
      ],
      "op": "DUP3",
      "path": "0"
    },
    "223": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2393,
        2400
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "230": {
      "op": "SHL"
    },
    "231": {
      "op": "SUB"
    },
    "232": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2364
      ],
      "op": "AND",
      "path": "0"
    },
    "233": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2364
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "234": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2374
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "239": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "245": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "247": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "248": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP4",
      "path": "0"
    },
    "250": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "SUB",
      "path": "0"
    },
    "251": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "252": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP7",
      "path": "0"
    },
    "253": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "GAS",
      "path": "0"
    },
    "254": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "255": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "256": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "258": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10F"
    },
    "261": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "263": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "265": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "266": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "267": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "268": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "270": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "REVERT",
      "path": "0"
    },
    "271": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "272": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "273": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "274": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "275": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "276": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "278": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "279": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "280": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "282": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "NOT",
      "path": "0"
    },
    "283": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "285": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP3",
      "path": "0"
    },
    "286": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "287": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "AND",
      "path": "0"
    },
    "288": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP3",
      "path": "0"
    },
    "289": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "290": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP1",
      "path": "0"
    },
    "291": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "293": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "294": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "POP",
      "path": "0"
    },
    "295": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "DUP2",
      "path": "0"
    },
    "296": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "ADD",
      "path": "0"
    },
    "297": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "298": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x133"
    },
    "301": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "302": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "303": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x559"
    },
    "306": {
      "fn": "Faucet.withdrawTokens",
      "jump": "i",
      "offset": [
        2359,
        2389
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2389
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2400
      ],
      "op": "LT",
      "path": "0"
    },
    "309": {
      "branch": 8,
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2359,
        2400
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "310": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "313": {
      "branch": 8,
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "314": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "316": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "317": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "321": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "323": {
      "op": "SHL"
    },
    "324": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "DUP2",
      "path": "0"
    },
    "325": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "330": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "DUP3",
      "path": "0"
    },
    "331": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "ADD",
      "path": "0"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "337": {
      "op": "DUP3"
    },
    "338": {
      "op": "ADD"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH32",
      "value": "0x4661756365744572726F723A20496E73756666696369656E742066756E647300"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "375": {
      "op": "DUP3"
    },
    "376": {
      "op": "ADD"
    },
    "377": {
      "op": "MSTORE"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "380": {
      "op": "ADD"
    },
    "381": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "384": {
      "op": "JUMP"
    },
    "385": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2351,
        2435
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "386": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "388": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "389": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "391": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "392": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "399": {
      "op": "SHL"
    },
    "400": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "401": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "408": {
      "op": "SHL"
    },
    "409": {
      "op": "SUB"
    },
    "410": {
      "op": "DUP5"
    },
    "411": {
      "op": "DUP2"
    },
    "412": {
      "op": "AND"
    },
    "413": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "415": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP4",
      "path": "0"
    },
    "416": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ADD",
      "path": "0"
    },
    "417": {
      "op": "MSTORE"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "op": "DUP5"
    },
    "423": {
      "op": "SWAP1"
    },
    "424": {
      "op": "MSTORE"
    },
    "425": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "426": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "427": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "AND",
      "path": "0"
    },
    "428": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "429": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2459
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "434": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "440": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "442": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "443": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "444": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP4",
      "path": "0"
    },
    "445": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "SUB",
      "path": "0"
    },
    "446": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "447": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "449": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP8",
      "path": "0"
    },
    "450": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "GAS",
      "path": "0"
    },
    "451": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "CALL",
      "path": "0"
    },
    "452": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "453": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "454": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "455": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "458": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "459": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "460": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "462": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "463": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "464": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "465": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "467": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "REVERT",
      "path": "0"
    },
    "468": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "470": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "471": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "472": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "473": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "475": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "476": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "477": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "479": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "NOT",
      "path": "0"
    },
    "480": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "482": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP3",
      "path": "0"
    },
    "483": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ADD",
      "path": "0"
    },
    "484": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "AND",
      "path": "0"
    },
    "485": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP3",
      "path": "0"
    },
    "486": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ADD",
      "path": "0"
    },
    "487": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "488": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "490": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "491": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "492": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "ADD",
      "path": "0"
    },
    "494": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8"
    },
    "498": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "499": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "500": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "503": {
      "fn": "Faucet.withdrawTokens",
      "jump": "i",
      "offset": [
        2445,
        2478
      ],
      "op": "JUMP",
      "path": "0"
    },
    "504": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "505": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2445,
        2478
      ],
      "op": "POP",
      "path": "0"
    },
    "506": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "POP",
      "path": "0"
    },
    "507": {
      "fn": "Faucet.withdrawTokens",
      "offset": [
        2262,
        2485
      ],
      "op": "POP",
      "path": "0"
    },
    "508": {
      "fn": "Faucet.withdrawTokens",
      "jump": "o",
      "offset": [
        2262,
        2485
      ],
      "op": "JUMP",
      "path": "0"
    },
    "509": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "offset": [
        1304,
        1309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "512": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1304,
        1309
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "519": {
      "op": "SHL"
    },
    "520": {
      "op": "SUB"
    },
    "521": {
      "offset": [
        1304,
        1309
      ],
      "op": "AND",
      "path": "0"
    },
    "522": {
      "offset": [
        1290,
        1300
      ],
      "op": "CALLER",
      "path": "0"
    },
    "523": {
      "offset": [
        1290,
        1309
      ],
      "op": "EQ",
      "path": "0"
    },
    "524": {
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x227"
    },
    "527": {
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "528": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "530": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "531": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "offset": [
        1282,
        1342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "539": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "540": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "542": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "ADD",
      "path": "0"
    },
    "543": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "546": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x522"
    },
    "550": {
      "fn": "Faucet.setFaucetDripAmount",
      "jump": "i",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "551": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "552": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2146,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x3"
    },
    "554": {
      "fn": "Faucet.setFaucetDripAmount",
      "offset": [
        2146,
        2172
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "555": {
      "fn": "Faucet.setFaucetDripAmount",
      "jump": "o",
      "offset": [
        2071,
        2179
      ],
      "op": "JUMP",
      "path": "0"
    },
    "556": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "557": {
      "offset": [
        1304,
        1309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "559": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1304,
        1309
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "566": {
      "op": "SHL"
    },
    "567": {
      "op": "SUB"
    },
    "568": {
      "offset": [
        1304,
        1309
      ],
      "op": "AND",
      "path": "0"
    },
    "569": {
      "offset": [
        1290,
        1300
      ],
      "op": "CALLER",
      "path": "0"
    },
    "570": {
      "offset": [
        1290,
        1309
      ],
      "op": "EQ",
      "path": "0"
    },
    "571": {
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "574": {
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "575": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "577": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "584": {
      "op": "SHL"
    },
    "585": {
      "offset": [
        1282,
        1342
      ],
      "op": "DUP2",
      "path": "0"
    },
    "586": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "587": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "589": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "ADD",
      "path": "0"
    },
    "590": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "593": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x522"
    },
    "597": {
      "fn": "Faucet.setTokenAddress",
      "jump": "i",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1282,
        1342
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x0"
    },
    "601": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "DUP1",
      "path": "0"
    },
    "602": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "op": "NOT"
    },
    "612": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "AND",
      "path": "0"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "619": {
      "op": "SHL"
    },
    "620": {
      "op": "SUB"
    },
    "621": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "622": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "623": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "624": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "AND",
      "path": "0"
    },
    "625": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "626": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "628": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "OR",
      "path": "0"
    },
    "629": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "630": {
      "fn": "Faucet.setTokenAddress",
      "offset": [
        1994,
        2020
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "631": {
      "fn": "Faucet.setTokenAddress",
      "jump": "o",
      "offset": [
        1920,
        2027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "632": {
      "fn": "Faucet.send",
      "offset": [
        1418,
        1863
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "633": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1466
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "635": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "636": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "638": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "639": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "644": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "646": {
      "op": "SHL"
    },
    "647": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "648": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "649": {
      "fn": "Faucet.send",
      "offset": [
        1485,
        1489
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "650": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "652": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "653": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ADD",
      "path": "0"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "fn": "Faucet.send",
      "offset": [
        1494,
        1495
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "657": {
      "fn": "Faucet.send",
      "offset": [
        1494,
        1495
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "664": {
      "op": "SHL"
    },
    "665": {
      "op": "SUB"
    },
    "666": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1466
      ],
      "op": "AND",
      "path": "0"
    },
    "667": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1466
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1476
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "673": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "676": {
      "op": "ADD"
    },
    "677": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "679": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "681": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "682": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "683": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP4",
      "path": "0"
    },
    "684": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "SUB",
      "path": "0"
    },
    "685": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "686": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP7",
      "path": "0"
    },
    "687": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "GAS",
      "path": "0"
    },
    "688": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "689": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "690": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "691": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C1"
    },
    "695": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "696": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "697": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "699": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "700": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "701": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "702": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "704": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "705": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "706": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "707": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "708": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "709": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "710": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "712": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "713": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "714": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "716": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "NOT",
      "path": "0"
    },
    "717": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "719": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "720": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ADD",
      "path": "0"
    },
    "721": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "AND",
      "path": "0"
    },
    "722": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "723": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ADD",
      "path": "0"
    },
    "724": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "725": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "727": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "728": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "POP",
      "path": "0"
    },
    "729": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "730": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "ADD",
      "path": "0"
    },
    "731": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "732": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E5"
    },
    "735": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "737": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x559"
    },
    "740": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1461,
        1491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "741": {
      "fn": "Faucet.send",
      "offset": [
        1461,
        1491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "742": {
      "branch": 9,
      "fn": "Faucet.send",
      "offset": [
        1461,
        1495
      ],
      "op": "GT",
      "path": "0"
    },
    "743": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x327"
    },
    "746": {
      "branch": 9,
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "747": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "749": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "750": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "754": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "756": {
      "op": "SHL"
    },
    "757": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "DUP2",
      "path": "0"
    },
    "758": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "761": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "763": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "DUP3",
      "path": "0"
    },
    "764": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "ADD",
      "path": "0"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "770": {
      "op": "DUP3"
    },
    "771": {
      "op": "ADD"
    },
    "772": {
      "op": "MSTORE"
    },
    "773": {
      "op": "PUSH18",
      "value": "0x4661756365744572726F723A20456D707479"
    },
    "792": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "797": {
      "op": "DUP3"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "op": "MSTORE"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "806": {
      "op": "JUMP"
    },
    "807": {
      "fn": "Faucet.send",
      "offset": [
        1453,
        1517
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "808": {
      "fn": "Faucet.send",
      "offset": [
        1549,
        1559
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "809": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "811": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "DUP2",
      "path": "0"
    },
    "813": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "816": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "818": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "819": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "821": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "823": {
      "fn": "Faucet.send",
      "offset": [
        1535,
        1560
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "824": {
      "fn": "Faucet.send",
      "offset": [
        1563,
        1578
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "825": {
      "op": "GT"
    },
    "826": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "829": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "830": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "832": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "833": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "837": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "839": {
      "op": "SHL"
    },
    "840": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "841": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "844": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "846": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "DUP3",
      "path": "0"
    },
    "847": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "ADD",
      "path": "0"
    },
    "848": {
      "op": "MSTORE"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "853": {
      "op": "DUP3"
    },
    "854": {
      "op": "ADD"
    },
    "855": {
      "op": "MSTORE"
    },
    "856": {
      "op": "PUSH32",
      "value": "0x4661756365744572726F723A2054727920616761696E206C6174657200000000"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBE"
    },
    "900": {
      "op": "JUMP"
    },
    "901": {
      "fn": "Faucet.send",
      "offset": [
        1527,
        1611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "Faucet.send",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x391"
    },
    "905": {
      "fn": "Faucet.send",
      "offset": [
        1741,
        1756
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "906": {
      "fn": "Faucet.send",
      "offset": [
        1760,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C"
    },
    "909": {
      "fn": "Faucet.send",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AA"
    },
    "912": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMP",
      "path": "0"
    },
    "913": {
      "fn": "Faucet.send",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "914": {
      "fn": "Faucet.send",
      "offset": [
        1727,
        1737
      ],
      "op": "CALLER",
      "path": "0"
    },
    "915": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "917": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "918": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "919": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "920": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "922": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "924": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "925": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "926": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "927": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "929": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "930": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "DUP4",
      "path": "0"
    },
    "931": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "932": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1770
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "933": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1770
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1770
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "935": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1770
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "936": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 7
    },
    "937": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "938": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP4",
      "path": "0"
    },
    "939": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "940": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "945": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "947": {
      "op": "SHL"
    },
    "948": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "949": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "950": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "951": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "958": {
      "op": "SHL"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "961": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "962": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "AND",
      "path": "0"
    },
    "963": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "964": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1804
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "969": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1804
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "970": {
      "fn": "Faucet.send",
      "offset": [
        1727,
        1737
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "971": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "DUP6",
      "path": "0"
    },
    "972": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "973": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1853
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "978": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1853
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "979": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "981": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "982": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "983": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ADD",
      "path": "0"
    },
    "984": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "985": {
      "fn": "Faucet.send",
      "offset": [
        1713,
        1738
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "986": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "987": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "988": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SUB",
      "path": "0"
    },
    "990": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "992": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1795
      ],
      "op": "DUP7",
      "path": "0"
    },
    "993": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "GAS",
      "path": "0"
    },
    "994": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "995": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "996": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "997": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "998": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F3"
    },
    "1001": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1002": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1003": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1005": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1006": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1007": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1008": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1010": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1011": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1012": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "1013": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "1014": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "1015": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "1016": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1018": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1019": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1020": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1022": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "NOT",
      "path": "0"
    },
    "1023": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1025": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1026": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ADD",
      "path": "0"
    },
    "1027": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "1028": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1029": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ADD",
      "path": "0"
    },
    "1030": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1031": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1033": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1034": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "POP",
      "path": "0"
    },
    "1035": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1036": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "ADD",
      "path": "0"
    },
    "1037": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x417"
    },
    "1041": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1042": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1043": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "1046": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1839,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1047": {
      "fn": "Faucet.send",
      "offset": [
        1839,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1048": {
      "fn": "Faucet.send",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "1051": {
      "fn": "Faucet.send",
      "offset": [
        1835,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1052": {
      "fn": "Faucet.send",
      "offset": [
        1835,
        1837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1054": {
      "fn": "Faucet.send",
      "offset": [
        1835,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CB"
    },
    "1057": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1835,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1058": {
      "fn": "Faucet.send",
      "offset": [
        1835,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1059": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1832
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1061": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1832
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1062": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42F"
    },
    "1065": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1855
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1066": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1067": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1855
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6DA"
    },
    "1070": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1816,
        1855
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1071": {
      "fn": "Faucet.send",
      "offset": [
        1816,
        1855
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1072": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1074": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "op": "NOT"
    },
    "1084": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1086": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1087": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1088": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SHL",
      "path": "0"
    },
    "1089": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "AND",
      "path": "0"
    },
    "1090": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1091": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "op": "SUB"
    },
    "1100": {
      "op": "SWAP1"
    },
    "1101": {
      "op": "SWAP3"
    },
    "1102": {
      "op": "AND"
    },
    "1103": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1105": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1106": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ADD",
      "path": "0"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1115": {
      "op": "ADD"
    },
    "1116": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1118": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1120": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1121": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1122": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1123": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SUB",
      "path": "0"
    },
    "1124": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1125": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1127": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1128": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "GAS",
      "path": "0"
    },
    "1129": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "CALL",
      "path": "0"
    },
    "1130": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1131": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1132": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1133": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47A"
    },
    "1136": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1137": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1138": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1140": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1141": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1142": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1143": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1145": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1146": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1147": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1148": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1149": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1150": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1151": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1153": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1154": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1155": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1157": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "NOT",
      "path": "0"
    },
    "1158": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1160": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1161": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ADD",
      "path": "0"
    },
    "1162": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "AND",
      "path": "0"
    },
    "1163": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1164": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ADD",
      "path": "0"
    },
    "1165": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1166": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1168": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1169": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1170": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1171": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "ADD",
      "path": "0"
    },
    "1172": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1173": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49E"
    },
    "1176": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1177": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1178": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "1181": {
      "fn": "Faucet.send",
      "jump": "i",
      "offset": [
        1790,
        1856
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1182": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1183": {
      "fn": "Faucet.send",
      "offset": [
        1790,
        1856
      ],
      "op": "POP",
      "path": "0"
    },
    "1184": {
      "fn": "Faucet.send",
      "jump": "o",
      "offset": [
        1418,
        1863
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1185": {
      "op": "JUMPDEST"
    },
    "1186": {
      "op": "DUP1"
    },
    "1187": {
      "op": "CALLDATALOAD"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "op": "DUP2"
    },
    "1197": {
      "op": "AND"
    },
    "1198": {
      "op": "DUP2"
    },
    "1199": {
      "op": "EQ"
    },
    "1200": {
      "op": "PUSH2",
      "value": "0x4B8"
    },
    "1203": {
      "op": "JUMPI"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1206": {
      "op": "DUP1"
    },
    "1207": {
      "op": "REVERT"
    },
    "1208": {
      "op": "JUMPDEST"
    },
    "1209": {
      "op": "SWAP2"
    },
    "1210": {
      "op": "SWAP1"
    },
    "1211": {
      "op": "POP"
    },
    "1212": {
      "jump": "o",
      "op": "JUMP"
    },
    "1213": {
      "op": "JUMPDEST"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1216": {
      "op": "DUP1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1219": {
      "op": "DUP4"
    },
    "1220": {
      "op": "DUP6"
    },
    "1221": {
      "op": "SUB"
    },
    "1222": {
      "op": "SLT"
    },
    "1223": {
      "op": "ISZERO"
    },
    "1224": {
      "op": "PUSH2",
      "value": "0x4D0"
    },
    "1227": {
      "op": "JUMPI"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1230": {
      "op": "DUP1"
    },
    "1231": {
      "op": "REVERT"
    },
    "1232": {
      "op": "JUMPDEST"
    },
    "1233": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "1236": {
      "op": "DUP4"
    },
    "1237": {
      "op": "PUSH2",
      "value": "0x4A1"
    },
    "1240": {
      "jump": "i",
      "op": "JUMP"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "SWAP5"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1245": {
      "op": "SWAP4"
    },
    "1246": {
      "op": "SWAP1"
    },
    "1247": {
      "op": "SWAP4"
    },
    "1248": {
      "op": "ADD"
    },
    "1249": {
      "op": "CALLDATALOAD"
    },
    "1250": {
      "op": "SWAP4"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "jump": "o",
      "op": "JUMP"
    },
    "1255": {
      "op": "JUMPDEST"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "DUP5"
    },
    "1262": {
      "op": "SUB"
    },
    "1263": {
      "op": "SLT"
    },
    "1264": {
      "op": "ISZERO"
    },
    "1265": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1268": {
      "op": "JUMPI"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "op": "DUP1"
    },
    "1272": {
      "op": "REVERT"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "CALLDATALOAD"
    },
    "1276": {
      "op": "SWAP2"
    },
    "1277": {
      "op": "SWAP1"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "jump": "o",
      "op": "JUMP"
    },
    "1280": {
      "op": "JUMPDEST"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "DUP5"
    },
    "1287": {
      "op": "SUB"
    },
    "1288": {
      "op": "SLT"
    },
    "1289": {
      "op": "ISZERO"
    },
    "1290": {
      "op": "PUSH2",
      "value": "0x512"
    },
    "1293": {
      "op": "JUMPI"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1296": {
      "op": "DUP1"
    },
    "1297": {
      "op": "REVERT"
    },
    "1298": {
      "op": "JUMPDEST"
    },
    "1299": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1302": {
      "op": "DUP3"
    },
    "1303": {
      "op": "PUSH2",
      "value": "0x4A1"
    },
    "1306": {
      "jump": "i",
      "op": "JUMP"
    },
    "1307": {
      "op": "JUMPDEST"
    },
    "1308": {
      "op": "SWAP4"
    },
    "1309": {
      "op": "SWAP3"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "jump": "o",
      "op": "JUMP"
    },
    "1314": {
      "op": "JUMPDEST"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1317": {
      "op": "DUP1"
    },
    "1318": {
      "op": "DUP3"
    },
    "1319": {
      "op": "MSTORE"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1322": {
      "op": "SWAP1"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "ADD"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH32",
      "value": "0x4661756365744572726F723A2043616C6C6572206E6F74206F776E6572000000"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1361": {
      "op": "DUP3"
    },
    "1362": {
      "op": "ADD"
    },
    "1363": {
      "op": "MSTORE"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1366": {
      "op": "ADD"
    },
    "1367": {
      "op": "SWAP1"
    },
    "1368": {
      "jump": "o",
      "op": "JUMP"
    },
    "1369": {
      "op": "JUMPDEST"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1374": {
      "op": "DUP3"
    },
    "1375": {
      "op": "DUP5"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "op": "SLT"
    },
    "1378": {
      "op": "ISZERO"
    },
    "1379": {
      "op": "PUSH2",
      "value": "0x56B"
    },
    "1382": {
      "op": "JUMPI"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1385": {
      "op": "DUP1"
    },
    "1386": {
      "op": "REVERT"
    },
    "1387": {
      "op": "JUMPDEST"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "op": "MLOAD"
    },
    "1390": {
      "op": "SWAP2"
    },
    "1391": {
      "op": "SWAP1"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "jump": "o",
      "op": "JUMP"
    },
    "1394": {
      "op": "JUMPDEST"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1399": {
      "op": "DUP3"
    },
    "1400": {
      "op": "DUP5"
    },
    "1401": {
      "op": "SUB"
    },
    "1402": {
      "op": "SLT"
    },
    "1403": {
      "op": "ISZERO"
    },
    "1404": {
      "op": "PUSH2",
      "value": "0x584"
    },
    "1407": {
      "op": "JUMPI"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "REVERT"
    },
    "1412": {
      "op": "JUMPDEST"
    },
    "1413": {
      "op": "DUP2"
    },
    "1414": {
      "op": "MLOAD"
    },
    "1415": {
      "op": "DUP1"
    },
    "1416": {
      "op": "ISZERO"
    },
    "1417": {
      "op": "ISZERO"
    },
    "1418": {
      "op": "DUP2"
    },
    "1419": {
      "op": "EQ"
    },
    "1420": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1423": {
      "op": "JUMPI"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1426": {
      "op": "DUP1"
    },
    "1427": {
      "op": "REVERT"
    },
    "1428": {
      "op": "JUMPDEST"
    },
    "1429": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1436": {
      "op": "SHL"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1439": {
      "op": "MSTORE"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1444": {
      "op": "MSTORE"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1449": {
      "op": "REVERT"
    },
    "1450": {
      "op": "JUMPDEST"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1453": {
      "op": "DUP3"
    },
    "1454": {
      "op": "NOT"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "GT"
    },
    "1457": {
      "op": "ISZERO"
    },
    "1458": {
      "op": "PUSH2",
      "value": "0x5BD"
    },
    "1461": {
      "op": "JUMPI"
    },
    "1462": {
      "op": "PUSH2",
      "value": "0x5BD"
    },
    "1465": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1468": {
      "jump": "i",
      "op": "JUMP"
    },
    "1469": {
      "op": "JUMPDEST"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "op": "ADD"
    },
    "1472": {
      "op": "SWAP1"
    },
    "1473": {
      "jump": "o",
      "op": "JUMP"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "DUP5"
    },
    "1481": {
      "op": "SUB"
    },
    "1482": {
      "op": "SLT"
    },
    "1483": {
      "op": "ISZERO"
    },
    "1484": {
      "op": "PUSH2",
      "value": "0x5D4"
    },
    "1487": {
      "op": "JUMPI"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1490": {
      "op": "DUP1"
    },
    "1491": {
      "op": "REVERT"
    },
    "1492": {
      "op": "JUMPDEST"
    },
    "1493": {
      "op": "DUP2"
    },
    "1494": {
      "op": "MLOAD"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1497": {
      "op": "DUP2"
    },
    "1498": {
      "op": "AND"
    },
    "1499": {
      "op": "DUP2"
    },
    "1500": {
      "op": "EQ"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1504": {
      "op": "JUMPI"
    },
    "1505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1507": {
      "op": "DUP1"
    },
    "1508": {
      "op": "REVERT"
    },
    "1509": {
      "op": "JUMPDEST"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "DUP2"
    },
    "1513": {
      "op": "DUP2"
    },
    "1514": {
      "op": "JUMPDEST"
    },
    "1515": {
      "op": "DUP1"
    },
    "1516": {
      "op": "DUP6"
    },
    "1517": {
      "op": "GT"
    },
    "1518": {
      "op": "ISZERO"
    },
    "1519": {
      "op": "PUSH2",
      "value": "0x620"
    },
    "1522": {
      "op": "JUMPI"
    },
    "1523": {
      "op": "DUP2"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "NOT"
    },
    "1527": {
      "op": "DIV"
    },
    "1528": {
      "op": "DUP3"
    },
    "1529": {
      "op": "GT"
    },
    "1530": {
      "op": "ISZERO"
    },
    "1531": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1534": {
      "op": "JUMPI"
    },
    "1535": {
      "op": "PUSH2",
      "value": "0x606"
    },
    "1538": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1541": {
      "jump": "i",
      "op": "JUMP"
    },
    "1542": {
      "op": "JUMPDEST"
    },
    "1543": {
      "op": "DUP1"
    },
    "1544": {
      "op": "DUP6"
    },
    "1545": {
      "op": "AND"
    },
    "1546": {
      "op": "ISZERO"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x613"
    },
    "1550": {
      "op": "JUMPI"
    },
    "1551": {
      "op": "SWAP2"
    },
    "1552": {
      "op": "DUP2"
    },
    "1553": {
      "op": "MUL"
    },
    "1554": {
      "op": "SWAP2"
    },
    "1555": {
      "op": "JUMPDEST"
    },
    "1556": {
      "op": "SWAP4"
    },
    "1557": {
      "op": "DUP5"
    },
    "1558": {
      "op": "SHR"
    },
    "1559": {
      "op": "SWAP4"
    },
    "1560": {
      "op": "SWAP1"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "MUL"
    },
    "1563": {
      "op": "SWAP1"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x5EA"
    },
    "1567": {
      "op": "JUMP"
    },
    "1568": {
      "op": "JUMPDEST"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "SWAP3"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "SWAP3"
    },
    "1573": {
      "op": "SWAP1"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "jump": "o",
      "op": "JUMP"
    },
    "1576": {
      "op": "JUMPDEST"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1579": {
      "op": "DUP3"
    },
    "1580": {
      "op": "PUSH2",
      "value": "0x637"
    },
    "1583": {
      "op": "JUMPI"
    },
    "1584": {
      "op": "POP"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x6C5"
    },
    "1590": {
      "op": "JUMP"
    },
    "1591": {
      "op": "JUMPDEST"
    },
    "1592": {
      "op": "DUP2"
    },
    "1593": {
      "op": "PUSH2",
      "value": "0x644"
    },
    "1596": {
      "op": "JUMPI"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "PUSH2",
      "value": "0x6C5"
    },
    "1603": {
      "op": "JUMP"
    },
    "1604": {
      "op": "JUMPDEST"
    },
    "1605": {
      "op": "DUP2"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "DUP2"
    },
    "1609": {
      "op": "EQ"
    },
    "1610": {
      "op": "PUSH2",
      "value": "0x65A"
    },
    "1613": {
      "op": "JUMPI"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1616": {
      "op": "DUP2"
    },
    "1617": {
      "op": "EQ"
    },
    "1618": {
      "op": "PUSH2",
      "value": "0x664"
    },
    "1621": {
      "op": "JUMPI"
    },
    "1622": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1625": {
      "op": "JUMP"
    },
    "1626": {
      "op": "JUMPDEST"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "SWAP2"
    },
    "1630": {
      "op": "POP"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "op": "PUSH2",
      "value": "0x6C5"
    },
    "1635": {
      "op": "JUMP"
    },
    "1636": {
      "op": "JUMPDEST"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1639": {
      "op": "DUP5"
    },
    "1640": {
      "op": "GT"
    },
    "1641": {
      "op": "ISZERO"
    },
    "1642": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1645": {
      "op": "JUMPI"
    },
    "1646": {
      "op": "PUSH2",
      "value": "0x675"
    },
    "1649": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1652": {
      "jump": "i",
      "op": "JUMP"
    },
    "1653": {
      "op": "JUMPDEST"
    },
    "1654": {
      "op": "POP"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "DUP3"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "op": "PUSH2",
      "value": "0x6C5"
    },
    "1663": {
      "op": "JUMP"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1668": {
      "op": "DUP4"
    },
    "1669": {
      "op": "LT"
    },
    "1670": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "1673": {
      "op": "DUP4"
    },
    "1674": {
      "op": "LT"
    },
    "1675": {
      "op": "AND"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "1678": {
      "op": "DUP5"
    },
    "1679": {
      "op": "LT"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1682": {
      "op": "DUP5"
    },
    "1683": {
      "op": "LT"
    },
    "1684": {
      "op": "AND"
    },
    "1685": {
      "op": "OR"
    },
    "1686": {
      "op": "ISZERO"
    },
    "1687": {
      "op": "PUSH2",
      "value": "0x6A3"
    },
    "1690": {
      "op": "JUMPI"
    },
    "1691": {
      "op": "POP"
    },
    "1692": {
      "op": "DUP2"
    },
    "1693": {
      "op": "DUP2"
    },
    "1694": {
      "op": "EXP"
    },
    "1695": {
      "op": "PUSH2",
      "value": "0x6C5"
    },
    "1698": {
      "op": "JUMP"
    },
    "1699": {
      "op": "JUMPDEST"
    },
    "1700": {
      "op": "PUSH2",
      "value": "0x6AD"
    },
    "1703": {
      "op": "DUP4"
    },
    "1704": {
      "op": "DUP4"
    },
    "1705": {
      "op": "PUSH2",
      "value": "0x5E5"
    },
    "1708": {
      "jump": "i",
      "op": "JUMP"
    },
    "1709": {
      "op": "JUMPDEST"
    },
    "1710": {
      "op": "DUP1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1713": {
      "op": "NOT"
    },
    "1714": {
      "op": "DIV"
    },
    "1715": {
      "op": "DUP3"
    },
    "1716": {
      "op": "GT"
    },
    "1717": {
      "op": "ISZERO"
    },
    "1718": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1721": {
      "op": "JUMPI"
    },
    "1722": {
      "op": "PUSH2",
      "value": "0x6C1"
    },
    "1725": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1728": {
      "jump": "i",
      "op": "JUMP"
    },
    "1729": {
      "op": "JUMPDEST"
    },
    "1730": {
      "op": "MUL"
    },
    "1731": {
      "op": "SWAP1"
    },
    "1732": {
      "op": "POP"
    },
    "1733": {
      "op": "JUMPDEST"
    },
    "1734": {
      "op": "SWAP3"
    },
    "1735": {
      "op": "SWAP2"
    },
    "1736": {
      "op": "POP"
    },
    "1737": {
      "op": "POP"
    },
    "1738": {
      "jump": "o",
      "op": "JUMP"
    },
    "1739": {
      "op": "JUMPDEST"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x51B"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1747": {
      "op": "DUP5"
    },
    "1748": {
      "op": "AND"
    },
    "1749": {
      "op": "DUP4"
    },
    "1750": {
      "op": "PUSH2",
      "value": "0x628"
    },
    "1753": {
      "jump": "i",
      "op": "JUMP"
    },
    "1754": {
      "op": "JUMPDEST"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1757": {
      "op": "DUP2"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1760": {
      "op": "NOT"
    },
    "1761": {
      "op": "DIV"
    },
    "1762": {
      "op": "DUP4"
    },
    "1763": {
      "op": "GT"
    },
    "1764": {
      "op": "DUP3"
    },
    "1765": {
      "op": "ISZERO"
    },
    "1766": {
      "op": "ISZERO"
    },
    "1767": {
      "op": "AND"
    },
    "1768": {
      "op": "ISZERO"
    },
    "1769": {
      "op": "PUSH2",
      "value": "0x6F4"
    },
    "1772": {
      "op": "JUMPI"
    },
    "1773": {
      "op": "PUSH2",
      "value": "0x6F4"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x594"
    },
    "1779": {
      "jump": "i",
      "op": "JUMP"
    },
    "1780": {
      "op": "JUMPDEST"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "op": "MUL"
    },
    "1783": {
      "op": "SWAP1"
    },
    "1784": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "63db63ad6b5b4e6032f32d2c0cc7acc2a9c7dd48",
  "source": "// SPDX-License-Identifier: UNLISCENSED\n\npragma solidity ^0.8.4;\n\ninterface IERC20 {\n    \n     /**\n     * @dev returns the tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n     /**\n     * @dev returns the decimal places of a token\n     */\n    function decimals() external view returns (uint8);\n\n    /**\n     * @dev transfers the `amount` of tokens from caller's account\n     * to the `recipient` account.\n     *\n     * returns boolean value indicating the operation status.\n     *\n     * Emits a {Transfer} event\n     */\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n \n}\n\ncontract Faucet {\n    \n    // The underlying token of the Faucet\n    IERC20 token;\n    \n    // The address of the faucet owner\n    address owner;\n    \n    // For rate limiting\n    mapping(address=>uint256) nextRequestAt;\n    \n    // No.of tokens to send when requested\n    uint256 faucetDripAmount = 1;\n    \n    // Sets the addresses of the Owner and the underlying token\n    constructor (address _smtAddress, address _ownerAddress) {\n        token = IERC20(_smtAddress);\n        owner = _ownerAddress;\n    }   \n    \n    // Verifies whether the caller is the owner \n    modifier onlyOwner{\n        require(msg.sender == owner,\"FaucetError: Caller not owner\");\n        _;\n    }\n    \n    // Sends the amount of token to the caller.\n    function send() external {\n        require(token.balanceOf(address(this)) > 1,\"FaucetError: Empty\");\n        require(nextRequestAt[msg.sender] < block.timestamp, \"FaucetError: Try again later\");\n        \n        // Next request from the address can be made only after 5 minutes         \n        nextRequestAt[msg.sender] = block.timestamp + (5 minutes); \n        \n        token.transfer(msg.sender,faucetDripAmount * 10**token.decimals());\n    }  \n    \n    // Updates the underlying token address\n     function setTokenAddress(address _tokenAddr) external onlyOwner {\n        token = IERC20(_tokenAddr);\n    }    \n    \n    // Updates the drip rate\n     function setFaucetDripAmount(uint256 _amount) external onlyOwner {\n        faucetDripAmount = _amount;\n    }  \n     \n     \n     // Allows the owner to withdraw tokens from the contract.\n     function withdrawTokens(address _receiver, uint256 _amount) external onlyOwner {\n        require(token.balanceOf(address(this)) >= _amount,\"FaucetError: Insufficient funds\");\n        token.transfer(_receiver,_amount);\n    }    \n}\n    ",
  "sourceMap": "684:1807:0:-:0;;;984:1;957:28;;1060:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1127:5;:27;;-1:-1:-1;;;;;1127:27:0;;;-1:-1:-1;;;;;;1127:27:0;;;;;;;;1164:21;;;;;;;;;;;684:1807;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;684:1807:0;;;;;;",
  "sourcePath": "contracts/Faucet.sol",
  "type": "contract"
}
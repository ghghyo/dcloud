{"version":3,"sources":["components/users.tsx","components/Header.tsx","components/Main.tsx","components/providers.tsx","App.tsx","reportWebVitals.ts","index.tsx","hooks/useaddPerson.ts","hooks/ApproveUpload.ts","hooks/ApproveFaucet.ts","hooks/AddUsersBeta.ts","hooks/ApproveDownload.ts"],"names":["Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","fontWeight","useStyles","makeStyles","fileBox","marginTop","marginBottom","width","position","border","display","flexDirection","alignItems","justifyContent","left","uploadBox","button","backgroundColor","fontSize","bottom","marginLeft","button2","button3","button4","Modal","Header","borderBottom","Content","Action","Users","classes","navigate","useNavigate","Goback","replace","isConnected","undefined","useEthers","account","useState","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","fileName","setfileName","currentResponse","setcurrentResponse","currentListContent","setcurrentListContent","isListRetrieved","setisListRetrieved","isScriptComplete","setisScriptComplete","ProviderMeta","setProviderMeta","downloadnameofFile","setdownloadnameofFile","downloadhash","setdownloadhash","ApproveUpload","approveUpload","approveUploadState","reset","ApproveFaucet","approveFaucet","approveFaucetState","reset2","ApproveDownload","approvedownload","approvedownloadState","hiddenFileInput","resetdownload","React","useRef","timeout","delay","Promise","res","setTimeout","returnDate","a","Date","toLocaleString","useEffect","status","url","axios","get","responseType","then","response","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","console","log","arrayBuffer","FormData","append","metadata","JSON","stringify","name","keyvalues","providerKey","post","maxContentLength","Infinity","maxBodyLength","headers","pinata_api_key","pinata_secret_api_key","catch","error","value","setValue","className","onClick","sx","borderColor","bgcolor","borderRadius","onChange","event","newValue","aria-label","centered","label","style","container","item","xs","variant","severity","onClose","current","type","ref","target","files","reader","FileReader","onload","f","results","result","base64number","buffer","Buffer","from","readAsDataURL","trigger","modal","nested","number","map","provider","index","Fragment","key","choice","method","rows","file","ipfs_pin_hash","hash","nameoffile","gap","title","palette","common","white","margin","activateBrowserWallet","deactivate","Button","marginInlineEnd","box","height","borderStyle","box2","topLeftBox","Main","validEthereum","RegExp","showUserButtons","setshowUserButtons","showOrgNamesProvider","setshowOrgNamesProvider","showOrgNames","setshowOrgNames","userType","setuserType","orgNum","setorgNum","UseaddPerson","approvePerson","approveandaddPersonState","alertCode","setalertCode","wrongInput","setwrongInput","AddUsersBeta","approvechange","approvechangeKeysState","SendtoDetermineUser","orgNumgiven","enteredName","prompt","toString","activateProvidersOrganizations","userTypegiven","NSA","NRO","CIA","AWS","TabContext","Box","TabList","Tab","TabPanel","component","m","TextField","id","placeholder","inputRef","test","Alert","AlertTitle","disabled","Providers","ProtectedRouteUsers","props","localStorage","getItem","to","ProtectedRouteProviders","App","DAppProvider","config","readOnlyChainId","Rinkeby","chainId","notifications","expirationPeriod","checkInterval","Container","maxWidth","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","abi","DetermineUser","DetermineUserAddress","networkMapping","String","constants","AddressZero","DetermineUserInterface","utils","Interface","DetermineUserContract","Contract","setPath","useContractFunction","transactionName","approveaddPerson","send","state","resetState","setItem","org","UploadDownload","UploadDownloadAddress","UploadDownloadInterface","UploadDownloadContract","Amazon","getAddress","Amazon2","approveuploadRequest","addressProvider","Faucet","FaucetAddress","FaucetInterface","FacuetContract","approvefaucetRequest","approvechangeKeys","reset3","NRO_address","CIA_address","NSA_address","AWS_address","approvedownloadRequest","ProviderName"],"mappings":"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","file":"static/js/main.e03babae.chunk.js","sourcesContent":["import { Button, makeStyles } from \"@material-ui/core\"\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport React, { useState, useEffect }  from 'react';\r\nimport axios from 'axios';\r\nimport { ApproveUpload, ApproveFaucet, ApproveDownload } from \"../hooks\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport Popup from 'reactjs-popup';\r\nimport { useEthers} from \"@usedapp/core\"\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\r\nimport { Tab, Box, Grid, Paper,styled} from \"@material-ui/core\"\r\n\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: \"ForestGreen\",\r\n    fontWeight: \"bold\"\r\n  }));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fileBox:{\r\n        marginTop:\"2vw\",\r\n        marginBottom:\"2vw\",\r\n        width:\"30vw\",\r\n        position: 'absolute',\r\n        border: '2px dashed FloralWhite',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        left:\"35vw\",\r\n        padding: \"0.5vw 0.5vw\",\r\n    },\r\n    uploadBox:{\r\n        marginTop:\"6vw\",\r\n        marginBottom:\"5vw\",\r\n        width:\"70vw\",\r\n        left:\"15vw\",\r\n        position: 'absolute',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: \"0.5vw 0.5vw\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        \r\n    },\r\n    button:{\r\n        backgroundColor: \"white\",\r\n        padding: \"0.5vw 0.5vw\",\r\n        fontSize: \"0.6vw\",\r\n        bottom: 10,\r\n        left: \"10%\",\r\n        marginLeft: -100,\r\n        position: \"absolute\"\r\n        \r\n    },\r\n    button2:{\r\n        backgroundColor: \"DeepSkyBlue\",\r\n        padding: \"0.5vw 10.5vw\",\r\n        fontSize: \"0.7vw\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    button3:{\r\n        backgroundColor: \"black\",\r\n        padding: \"0.5vw 0.5vw\",\r\n        fontSize: \"0.7vw\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    button4:{\r\n        backgroundColor: \"orange\",\r\n        padding: \"0.5vw 0.5vw\",\r\n        fontSize: \"0.7vw\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    Modal:{\r\n        fontSize:\"1vw\",\r\n        backgroundColor: \"AntiqueWhite\",\r\n        width:\"100%\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: \"10%\",\r\n        border: \"0.5vw solid white;\"\r\n\r\n    },\r\n    Header:{\r\n        width:\"50%\",\r\n        left: \"40%\",\r\n        marginLeft: \"25%\",\r\n        borderBottom:\"0.3vw solid gray\",\r\n        fontSize: \"1.5vw\",\r\n        textAlign: \"center\",\r\n        padding:\"0.3vw\"\r\n    },\r\n    Content:{\r\n        width:\"100%\",\r\n        padding:\"1vw 1vw\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: \"center\"\r\n    },\r\n    Action:{\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: \"center\",\r\n        color: \"white\"\r\n\r\n    }\r\n}))\r\n\r\n\r\nfunction Users() {\r\n\r\n    // upload a file\r\n\r\n    const classes = useStyles()\r\n    let navigate=useNavigate()\r\n    function Goback(){\r\n        navigate(\"/\",{replace:true})\r\n    }\r\n    const {account}= useEthers()\r\n    const isConnected = account !== undefined\r\n    const [selectedFile, setSelectedFile] = useState<Buffer>()\r\n\tconst [isFilePicked, setIsFilePicked] = useState(false);\r\n    const [fileName, setfileName] =useState(\"\")\r\n    const [currentResponse,setcurrentResponse] =useState(0)\r\n    const [currentListContent,setcurrentListContent] =useState<string []>()\r\n    const [isListRetrieved, setisListRetrieved] = useState(false)\r\n    const [isScriptComplete, setisScriptComplete] = useState(\"\")\r\n    const [ProviderMeta, setProviderMeta]= useState(0)\r\n    const [downloadnameofFile,setdownloadnameofFile] = useState(\"\")\r\n    const [downloadhash, setdownloadhash]= useState(\"\")\r\n    const { approveUpload, approveUploadState, reset } = ApproveUpload() ?? [];\r\n    const { approveFaucet, approveFaucetState, reset2 } = ApproveFaucet() ?? []\r\n    const { approvedownload, approvedownloadState, resetdownload } = ApproveDownload() ?? [];\r\n\r\n\r\n    const sendFromFaucet = () =>{\r\n\r\n        approveFaucet()\r\n\r\n    }\r\n\r\n    const retrievefileList = () =>{\r\n        const url =  `https://api.pinata.cloud/data/pinList?status=pinned`;  //`https://api.pinata.cloud/data/pinList?status=pinned&ipfs_pin_hash=QmWix5g8PsQ2EnFQT4wzDHSc61EKxmDSAQFUiWdHi2C6bf`\r\n        axios({\r\n            url: url, //your url\r\n            method: 'GET',\r\n            headers: {\r\n                pinata_api_key: '3690d2a0f90fee8104fc',\r\n                pinata_secret_api_key: '28da108d51fc6c1bb66407d033043cc5b39d111d4bc2deb9aa917f55845fd39a'\r\n            }\r\n        }).then((response) => {\r\n            console.log(response.data.rows.map((file: any) =>   \r\n                file.ipfs_pin_hash\r\n            ))\r\n            console.log(response.data.rows[0]['metadata'].keyvalues[\"providerKey\"])\r\n            console.log(response.data.rows[0].ipfs_pin_hash)\r\n            console.log(response.data.rows['length'])\r\n            setcurrentListContent(response.data.rows)\r\n            setisListRetrieved(true)\r\n        });\r\n        //render the current list\r\n        \r\n    }\r\n\r\n\tconst downloadaFile = (hash:string, nameoffile:string, providerKey: number) => { \r\n\r\n        approvedownload(providerKey)\r\n        setdownloadnameofFile(nameoffile)\r\n        setdownloadhash(hash)\r\n\r\n\t};\r\n\r\n    const hiddenFileInput = React.useRef(null);\r\n    \r\n    const handleClick = () => {\r\n        \r\n        \r\n        //@ts-ignore\r\n        hiddenFileInput.current.click();\r\n        \r\n      };\r\n\r\n    // authenticate\r\n    const changeHandler= (event : any) => {\r\n    \r\n        setIsFilePicked(true)\r\n        \r\n        setfileName(event.target.files[0].name)\r\n        const reader = new FileReader();\r\n        \r\n        reader.onload =function(f) {\r\n            const results = reader.result;\r\n            //@ts-ignore\r\n            const base64number= results?.replace(\"data\",\"\").replace(/^.+,/,\"\")     \r\n            const buffer = Buffer.from(base64number,\"base64\")\r\n            setSelectedFile(buffer);\r\n            };\r\n        reader.readAsDataURL(event.target.files[0]);\r\n        event.target.value= null\r\n        \r\n\r\n    };\r\n    function timeout(delay: number) {\r\n        return new Promise( res => setTimeout(res, delay) );\r\n    }\r\n\r\n    const returnDate = async () => {\r\n        await timeout(3000)\r\n        setisScriptComplete(Date().toLocaleString())\r\n    \r\n\r\n    }\r\n\r\n        \r\n    useEffect(() => {\r\n\r\n        if(approvedownloadState.status===\"Success\"){\r\n            setcurrentResponse(10)\r\n            const url = 'https://gateway.pinata.cloud/ipfs/' + downloadhash;\r\n\r\n            //get a file using the hash\r\n            axios\r\n            .get(url, {responseType: 'blob'} // important\r\n            ).then(function(response){\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', downloadnameofFile); //or any other extension\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            });\r\n            \r\n        }\r\n\r\n        if(approveUploadState.status===\"Success\"){\r\n            console.log(approveUploadState)\r\n\r\n            const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n            //@ts-ignore\r\n            var arrayBuffer= new Blob([selectedFile]);\r\n            let data = new FormData();\r\n            console.log(fileName)\r\n            data.append('file', arrayBuffer,fileName);\r\n            const metadata = JSON.stringify({\r\n                name: fileName,\r\n                keyvalues: {\r\n                    providerKey: ProviderMeta\r\n                }\r\n            });\r\n            data.append('pinataMetadata', metadata);\r\n        \r\n            setcurrentResponse(10)\r\n            axios\r\n            .post(url, data, {\r\n                maxContentLength: Infinity,\r\n                maxBodyLength: Infinity, //this is needed to prevent axios from erroring out with large files\r\n                headers: {\r\n                    pinata_api_key: '3690d2a0f90fee8104fc', //should usually be hidden but just for experimental purposes\r\n                    pinata_secret_api_key: '28da108d51fc6c1bb66407d033043cc5b39d111d4bc2deb9aa917f55845fd39a'\r\n                }\r\n            })\r\n            .then(function (response) {\r\n                console.log(response.status);\r\n                setcurrentResponse(response.status)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                setcurrentResponse(error.status)\r\n            });\r\n            return reset()\r\n            \r\n        }\r\n        if (approveUploadState.status===\"Exception\" ||approveFaucetState.status===\"Exception\" || approvedownloadState.status===\"Exception\"){\r\n            setcurrentResponse(30)\r\n            return reset()\r\n    \r\n        }\r\n        if (approveUploadState.status===\"Mining\" || approveFaucetState.status===\"Mining\" || approvedownloadState.status===\"Mining\"){\r\n            setcurrentResponse(20)\r\n        }\r\n        if (approveFaucetState.status===\"Success\"){\r\n            setcurrentResponse(11)\r\n        }\r\n        }, [approveUploadState, approveFaucetState, approvedownloadState])\r\n\r\n   \r\n\r\n\tconst handleSubmission = (choice:number) => {\r\n        setProviderMeta(choice)\r\n        approveUpload(choice)\r\n        console.log(approveUploadState)\r\n        setIsFilePicked(false)\r\n        \r\n\t};\r\n\r\n    const closeModal = () => setIsFilePicked(false);\r\n    const providerbuttons = [{name: 'Amazon', number: 1}, {name: 'Amazon 2', number:2}, \r\n            {name: 'No Preference', number:1}]\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event: any, newValue: React.SetStateAction<string>) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n  \r\n    \r\n   if (isConnected) return (\r\n    \r\n    <>    \r\n    <Button\r\n              className={classes.button}\r\n              color=\"primary\"\r\n              onClick={() => Goback()}\r\n          >\r\n              Go Back\r\n    </Button>\r\n    <Box sx={{ width: '100%' }}>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1 ,borderColor: 'divider', bgcolor:\"FloralWhite\", borderRadius: \"25px\" }}>\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n            <Tab label=\"Instructions\" value=\"1\" />\r\n            <Tab label=\"Upload\" value=\"2\" />\r\n            <Tab label=\"Download\" value=\"3\" />\r\n            <Tab label=\"Cloud Computing\" value=\"4\" />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value=\"1\">\r\n        <div style={{color:\"white\", fontWeight:\"bold\"}} className={classes.Header}> Instructions </div>\r\n                <div style={{color:\"white\"}} className={classes.Content}>\r\n                    {' '}\r\n                    Since you will be using our custom GOV token, you must first add the following address to your wallet assets: \r\n                    \r\n                    <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                    <br />\r\n                        <Item>0x150c4dc2ad9347e851fc2b845ca95553d482cf8b</Item>\r\n                    </Grid>\r\n                    </Grid>  \r\n                    <br />\r\n                    If you do not have any GOV token, you can get some from our Rinkeby Faucet by pressing \"GET GOV\" below. If you already have tokens please continue without using the faucet.\r\n                </div>\r\n                <div style={{color:\"white\"}} className={classes.Action}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    className={classes.button4}\r\n                    onClick={() => sendFromFaucet()}\r\n                >\r\n                    GET GOV\r\n                </Button>\r\n                </div>\r\n    \r\n                <div style={{ marginTop:\"2vw\" }}>\r\n                \r\n                {currentResponse===20? (\r\n                  <Alert severity=\"info\">\r\n              <AlertTitle>Mining</AlertTitle>\r\n              <strong>Your transaction is mining ... Please wait</strong>\r\n              </Alert>   \r\n              ) : currentResponse===30?(\r\n                  <Alert onClose={() => {setcurrentResponse(0)}} severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              <strong>You either denied the transaction or just requested from the faucet</strong>\r\n              </Alert>\r\n              ) : currentResponse===11? (\r\n                                                \r\n                <Alert onClose={() => {setcurrentResponse(0)}} severity=\"success\">\r\n                <AlertTitle>Done</AlertTitle>\r\n                <strong>Success you may begin!</strong>\r\n                </Alert>) :(null)\r\n          }\r\n  \r\n  \r\n            </div>\r\n        </TabPanel>\r\n\r\n        <TabPanel value=\"2\">\r\n            \r\n        <Button\r\n              className={classes.button}\r\n              color=\"primary\"\r\n              onClick={() => Goback()}\r\n          >\r\n              Go Back\r\n          </Button>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Item>Hello! Please choose the file you would like to upload and then submit. You can see your uploads on the download screen.</Item>\r\n          </Grid>\r\n          </Grid>  \r\n    \r\n        <div className={classes.fileBox}>\r\n      \r\n                <Button color=\"primary\" variant=\"contained\" className={classes.button4} onClick={handleClick}>Choose the file</Button>\r\n              <input type=\"file\" style={{display:'none'}} name=\"file\" ref={hiddenFileInput} onChange={changeHandler} />\r\n       \r\n            \r\n          {isFilePicked ? (\r\n              <><>&nbsp;</>\r\n              <Popup\r\n                      trigger={<Button color=\"primary\" variant=\"contained\" className={classes.button4} > Submit </Button>} \r\n                      modal\r\n                      nested\r\n                      \r\n                  >\r\n                          <div className={classes.Modal}> \r\n                          <Button color=\"primary\" variant=\"contained\" className={classes.button3}\r\n                          onClick={closeModal}> \r\n                                  &times; \r\n                    \r\n                              </Button> \r\n                              <div className={classes.Header}> Choose your provider </div>\r\n                              <div className={classes.Content}>\r\n                                  {' '}\r\n                                    You are given the ability to choose your provider.\r\n                                  <br />\r\n                                  If you click on no preference then one will be chosen for you.\r\n                              </div>\r\n                              <div className={classes.Action}>\r\n                              {providerbuttons.map((provider, index) => {\r\n                                  return(\r\n                                    <React.Fragment key={index}><Button\r\n                                      color=\"primary\"\r\n                                      variant=\"contained\"\r\n                                      className={classes.button3}\r\n                                      onClick={() => handleSubmission(provider.number)}\r\n                                      key={index}\r\n                                  >\r\n                                      {provider.name}\r\n                                  </Button>&nbsp;</React.Fragment>\r\n                                    )\r\n                              })}\r\n                                 \r\n                              </div>\r\n                          </div>\r\n            \r\n                  </Popup></>\r\n\r\n\r\n              ) : (\r\n                  <>\r\n                  <div>&nbsp; </div><p  style={{ color: \"white\" }}>Select a file to upload</p></>\r\n\t\t\t)}\r\n\r\n\r\n          </div>\r\n          <div style={{ marginTop:\"10vw\" }}>\r\n                \r\n              {currentResponse===200 ? (\r\n              \r\n                <Alert onClose={() => {setcurrentResponse(0)}} severity=\"success\">\r\n            <AlertTitle>Success</AlertTitle>\r\n            <strong>Your file has been uploaded!</strong>\r\n            </Alert>\r\n              ) : currentResponse===400? (\r\n                                \r\n                <Alert onClose={() => {setcurrentResponse(0)}} severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                <strong>Your file did not upload to Pinata!</strong>\r\n                </Alert>\r\n\t\t\t) : currentResponse===10? (\r\n                                                \r\n                <Alert onClose={() => {setcurrentResponse(0)}} severity=\"info\">\r\n                <AlertTitle>In Progress</AlertTitle>\r\n                <strong>Your file is uploading!</strong>\r\n                </Alert>\r\n            ) : currentResponse===20? (\r\n                <Alert severity=\"info\">\r\n            <AlertTitle>Mining</AlertTitle>\r\n            <strong>Your transaction is mining ... Please wait</strong>\r\n            </Alert>   \r\n            ) : currentResponse===30?(\r\n                <Alert onClose={() => {setcurrentResponse(0)}} severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            <strong>You either denied the transaction or do not have the correct permissions</strong>\r\n            </Alert>\r\n            ) : (null)\r\n        }\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </TabPanel>\r\n        <TabPanel value=\"3\">\r\n        \r\n          <Button\r\n              className={classes.button}\r\n              color=\"primary\"\r\n              onClick={() => Goback()}\r\n          >\r\n              Go Back\r\n          </Button>\r\n          <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Item>Welcome to the download screen.</Item>\r\n          </Grid>\r\n          </Grid>\r\n          \r\n          <div className={classes.fileBox}>\r\n                <Button color=\"primary\" variant=\"contained\" className={classes.button4} onClick={retrievefileList}>View all uploaded files</Button> \r\n\r\n                </div>\r\n                {isListRetrieved ? (\r\n                              <div className={classes.uploadBox}>\r\n                              {currentListContent?.map((file, index) => {\r\n                                  return(\r\n                                    <React.Fragment key={index}>\r\n                                        \r\n                                        <Button\r\n                                      color=\"primary\"\r\n                                      variant=\"contained\"\r\n                                      className={classes.button2}\r\n                                      onClick={() => {downloadaFile(file[\"ipfs_pin_hash\"],file[\"metadata\"].name,file['metadata'].keyvalues[\"providerKey\"])}}\r\n                                      key={index}\r\n                                  >\r\n                                      {file[\"metadata\"].name}\r\n                                  </Button>&nbsp;</React.Fragment>\r\n                                  \r\n                                    )\r\n                              })}\r\n                            </div>\r\n                    \r\n                ) : (\r\n                    null\r\n\r\n                )}\r\n            <div style={{ marginTop:\"25vw\" }}>\r\n                \r\n                {currentResponse===10? (\r\n                                                  \r\n                  <Alert onClose={() => {setcurrentResponse(0)}} severity=\"success\">\r\n                  <AlertTitle>Success</AlertTitle>\r\n                  <strong>Your file will now download</strong>\r\n                  </Alert>\r\n              ) : currentResponse===20? (\r\n                  <Alert severity=\"info\">\r\n              <AlertTitle>Mining</AlertTitle>\r\n              <strong>Your transaction is mining ... Please wait</strong>\r\n              </Alert>   \r\n              ) : currentResponse===30?(\r\n                  <Alert onClose={() => {setcurrentResponse(0)}} severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              <strong>You either denied the transaction or do not have the correct permissions</strong>\r\n              </Alert>\r\n              ) : (null)\r\n          }\r\n  \r\n  \r\n            </div>\r\n       \r\n\r\n\r\n        </TabPanel>\r\n        <TabPanel value=\"4\">\r\n\r\n        <div style={{color:\"white\", fontWeight:\"bold\"}} className={classes.Header}> Instructions </div>\r\n                <div style={{color:\"white\"}} className={classes.Content}>\r\n                    {' '}\r\n                    Here you will be able to spin up an instance on the golem network and run your python script on GPU.\r\n                    Since connecting with the Golem network requires several different steps which can be found here:  \r\n                    &nbsp;<a href=\"https://handbook.golem.network/introduction/requestor\">GOLEM.</a>  We will be demoing this process by providing\r\n                    a python script that already adheres to the Golem requirements. This python script will return the current time and date.\r\n                </div>\r\n                <div style={{color:\"white\"}} className={classes.Action}>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    className={classes.button4}\r\n                    onClick={() => returnDate()}\r\n                >\r\n                    Run Script\r\n                </Button>\r\n        </div>\r\n\r\n        {isScriptComplete === \"\" ?(\r\n            null\r\n\r\n        ) : (<div style={{color:\"white\"}} className={classes.Content}> {isScriptComplete} </div>)\r\n\r\n        }\r\n\r\n        </TabPanel>\r\n      </TabContext>\r\n    </Box>\r\n    \r\n          \r\n          </>\r\n  );\r\n  return  (   <Button\r\n  className={classes.button}\r\n  color=\"primary\"\r\n  onClick={() => Goback()}\r\n>\r\n  Go Back\r\n</Button>);\r\n}\r\n\r\nexport default Users\r\n","import { Button, makeStyles } from \"@material-ui/core\"\r\nimport { useEthers } from \"@usedapp/core\"\r\nimport React from 'react';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        gap: theme.spacing(1)\r\n    },\r\ntitle: {\r\n        color: theme.palette.common.white,\r\n        fontSize: \"2vw\",\r\n        margin: 'auto',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    }\r\n}))\r\n\r\n\r\nexport const Header = () => {\r\n    const classes = useStyles()\r\n\r\n    const { account, activateBrowserWallet, deactivate } = useEthers()\r\n\r\n    const isConnected = account !== undefined\r\n\r\n    return (\r\n        <><div className={classes.container}>\r\n            <h1 className={classes.title}> Welcome to the future of storage and cloud computing!</h1>\r\n            {isConnected ? (\r\n                <Button  variant=\"contained\" onClick={deactivate}>\r\n                    Disconnect\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => activateBrowserWallet()}\r\n                >\r\n                    Connect\r\n                </Button>\r\n            )}\r\n        </div><div style={{color: \"red\", display:\"flex\" ,justifyContent:\"right\", marginInlineEnd:20}} >\r\n                {isConnected ? (\r\n                    <div>\r\n                    \r\n                    </div>\r\n                ) : (\r\n                    <div >\r\n                        You must connect your wallet before we begin  \r\n                    </div>\r\n                )}\r\n\r\n            </div></>\r\n    )\r\n}","import { useEthers} from \"@usedapp/core\"\r\nimport React, { useState,useEffect, useRef } from \"react\"\r\nimport { Button,Box, makeStyles, TextField } from \"@material-ui/core\"\r\nimport { UseaddPerson, AddUsersBeta } from \"../hooks\"\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\r\nimport { Tab} from \"@material-ui/core\"\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    box: {\r\n        height: 100,\r\n        marginBottom:\"2vw\",\r\n        display: \"flex\",\r\n        border: \"1px solid black\", \r\n        padding: 8,\r\n        gap: theme.spacing(),\r\n        borderStyle: \"dashed\",\r\n        borderColor: \"orange\",\r\n        margin:\"auto\"\r\n      },\r\n    box2: {\r\n        marginBottom:\"2vw\",\r\n        padding: 18,\r\n        gap: theme.spacing(4),\r\n        display: \"flex\",\r\n        borderStyle: \"dashed\",\r\n        borderColor: \"orange\",\r\n        margin:\"auto\",\r\n        flexDirection: 'column',\r\n        backgroundColor: \"GhostWhite\",\r\n      },\r\n    topLeftBox: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    button:{\r\n \r\n        borderRadius: \"1vw\",\r\n        backgroundColor: \"#21b6ae\",\r\n        padding: \"1vw 1vw\",\r\n        fontSize: \"1vw\",\r\n        \r\n    }\r\n}))\r\n\r\n\r\nexport const Main = () => {\r\n\r\n    const validEthereum = new RegExp(\r\n        '^0x[a-fA-F0-9]{40}$'\r\n     );\r\n\r\n\r\n    const classes = useStyles()\r\n    const {account}= useEthers()\r\n    const isConnected = account !== undefined\r\n\r\n    const [showUserButtons, setshowUserButtons] = useState(false)\r\n    const [showOrgNamesProvider, setshowOrgNamesProvider] = useState(false)\r\n    const [showOrgNames, setshowOrgNames] = useState(false)\r\n    const [userType, setuserType] =useState<number>(0)\r\n    const [orgNum, setorgNum] =useState<number>(0)\r\n    const { approvePerson, approveandaddPersonState } = UseaddPerson() ?? []\r\n    const [alertCode, setalertCode] = useState(0);\r\n    const [wrongInput,setwrongInput] = useState(false);\r\n    const {approvechange, approvechangeKeysState} = AddUsersBeta() ?? []\r\n\r\n    const AddBetaTesters = () => {\r\n        if (validEthereum.test(NRO.current[\"value\"]) && validEthereum.test(NSA.current[\"value\"]) && validEthereum.test(CIA.current[\"value\"]) && validEthereum.test(AWS.current[\"value\"])) {\r\n            \r\n            setwrongInput(false)\r\n            approvechange(NRO.current['value'],CIA.current['value'],NSA.current['value'], AWS.current['value'])\r\n         }\r\n        else{\r\n            setwrongInput(true)\r\n        }\r\n       \r\n    }\r\n    \r\n    const activateUserOrganizations = (userTypegiven: number) => {\r\n        setuserType(userTypegiven)\r\n        setshowOrgNames(true)\r\n\r\n    }\r\n    \r\n    \r\n    const SendtoDetermineUser = (orgNumgiven: number) => {\r\n        const enteredName = prompt('Please enter your name')!.toString() ?? \"noname\"\r\n        setorgNum(orgNumgiven)\r\n        console.log(orgNum,userType)\r\n        approvePerson(enteredName,userType,orgNumgiven)\r\n\r\n\r\n    }\r\n\r\n    const activateProvidersOrganizations = (userTypegiven: number) => {\r\n        setshowOrgNamesProvider(true)\r\n        setuserType(userTypegiven)\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (isConnected===true){\r\n            setshowUserButtons(true)\r\n            \r\n        }\r\n        else {\r\n            setshowUserButtons(false)\r\n            setshowOrgNames(false)\r\n            setshowOrgNamesProvider(false)\r\n            \r\n        }\r\n        if (showOrgNamesProvider===true){\r\n            setshowUserButtons(false)\r\n            setshowOrgNames(false)\r\n        }\r\n        if (showOrgNames===true){\r\n            setshowUserButtons(false)\r\n            setshowOrgNamesProvider(false)\r\n        }\r\n        if (approveandaddPersonState.status===\"Exception\" ){\r\n            setalertCode(1)\r\n        }\r\n        if (approveandaddPersonState.status===\"Mining\" || approvechangeKeysState.status===\"Mining\"){\r\n            setalertCode(2)\r\n        }\r\n        if (approvechangeKeysState.status===\"Success\"){\r\n            setalertCode(3)\r\n        }\r\n\r\n    }, [isConnected,showOrgNames, showOrgNamesProvider,userType,approveandaddPersonState, approvechangeKeysState])\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event: any, newValue: React.SetStateAction<string>) => {\r\n        setValue(newValue);\r\n    }\r\n    const NSA = useRef(''); const NRO= useRef(\"\"); const CIA=useRef(\"\"); const AWS= useRef(\"\")\r\n\r\n    if (isConnected) return(\r\n        \r\n        <>\r\n\r\n        <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1 ,borderColor: 'divider', bgcolor:\"FloralWhite\", borderRadius: \"25px\" }}>\r\n          <TabList onChange={handleChange} aria-label=\"lab API tabs example\" centered>\r\n            <Tab label=\"Sign In\" value=\"1\" />\r\n            <Tab label=\"Sign Up\" value=\"2\" />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value=\"2\">\r\n\r\n        <Box\r\n             component=\"span\"\r\n             m={1} //margin\r\n             className={classes.box2}\r\n        >\r\n            <h1 style={{color: \"black\", fontSize: \"2vw\", margin: 'auto', alignItems: 'center', justifyContent: 'center'}}> If you would like to test this prototype, you must fill out the form below. </h1>\r\n            <div style={{ color: \"black\" }}> Usually, only the owner of the contract can add the wallet addresses of authorized users/providers. However, for the purposes of testing, you may add one wallet address for each user/provider type. This will effectively authorize that account to sign in as that user/provider type.</div>\r\n            \r\n            <div style={{ color: \"blue\" }}>FYSA: you may have multiple wallet addresses within your metamask wallet on Rinkeby testnet.</div>\r\n\r\n            \r\n            <TextField label={'NRO authorized account'} id=\"filled-basic1\"  variant=\"filled\" placeholder=\"0x0000000000000000000000000000000000000000\" inputRef={NRO}/>\r\n            <TextField label={'CIA authorized account'} id=\"filled-basic2\" variant=\"filled\"  placeholder=\"0x0000000000000000000000000000000000000000\" inputRef={CIA}/>\r\n            <TextField  label={'NSA authorized account'} id=\"filled-basic3\"  variant=\"filled\" placeholder=\"0x0000000000000000000000000000000000000000\" inputRef={NSA}/>\r\n            <TextField  label={'AWS authorized account'} id=\"filled-basic4\"  variant=\"filled\" placeholder=\"0x0000000000000000000000000000000000000000\" inputRef={AWS}/>\r\n            \r\n            {wrongInput ? (<p style= {{fontWeight:\"bold\", textAlign:\"center\", color:\"red\"}}> YOU ENTERED INCORRECT ADDRESSES </p>):\r\n            (null)}\r\n            \r\n        <Button\r\n            className={classes.button}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => AddBetaTesters()}\r\n            >\r\n            Authorize Accounts\r\n        </Button>\r\n\r\n        </Box>\r\n        { alertCode === 2 ? <Alert severity=\"info\">\r\n            <AlertTitle>Mining</AlertTitle>\r\n            <strong>Your transaction is mining ... Please wait</strong>\r\n            </Alert> : alertCode === 3 ? <Alert onClose={() => {setalertCode(0)}} severity=\"success\">\r\n            <AlertTitle>Congratulations!</AlertTitle>\r\n            <strong>You now have authorized accounts</strong>\r\n            </Alert> : null }\r\n        </TabPanel>\r\n\r\n        <TabPanel value=\"1\">\r\n        \r\n        \r\n\r\n        <Box\r\n            component=\"span\"\r\n            m={1} //margin\r\n            className={`${classes.topLeftBox} ${classes.box}`}\r\n\r\n        >\r\n                <div style={{ color: \"white\" }}> Choose User Type: </div>\r\n\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={!showUserButtons}\r\n                    onClick={() => activateUserOrganizations(1)}\r\n                >\r\n                    User\r\n                </Button>\r\n\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={!showUserButtons}\r\n                    onClick={() => activateProvidersOrganizations(2)}\r\n                >\r\n                    Storager Provider\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={!showUserButtons}\r\n                    onClick={() => activateProvidersOrganizations(3)}\r\n                >\r\n                    Cloud Provider\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    disabled={!showUserButtons}\r\n                    onClick={() => activateProvidersOrganizations(4)}\r\n                >\r\n                    Both\r\n                </Button>\r\n\r\n            </Box>\r\n\r\n            <div>\r\n            {showOrgNames || showOrgNamesProvider ? (\r\n                <><Box\r\n                        component=\"span\"\r\n                        padding={1} //margin\r\n                        className={`${classes.topLeftBox} ${classes.box}`}\r\n\r\n                    >\r\n                        <div style={{ color: \"white\" }}> Choose Organization: </div>\r\n\r\n                        <Button\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!showOrgNames}\r\n                            onClick={() => SendtoDetermineUser(1)}\r\n                        >\r\n                            NRO\r\n                        </Button>\r\n\r\n                        <Button\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!showOrgNames}\r\n                            onClick={() => SendtoDetermineUser(2)}\r\n                        >\r\n                            NSA\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!showOrgNames}\r\n                            onClick={() => SendtoDetermineUser(3)}\r\n                        >\r\n                            CIA\r\n                        </Button>\r\n\r\n                        <Button\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!showOrgNamesProvider}\r\n                            onClick={() => SendtoDetermineUser(4)}\r\n                        >\r\n                            AWS\r\n                        </Button>\r\n\r\n                        \r\n                        <Button\r\n                            className={classes.button}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            disabled={!showOrgNamesProvider}\r\n                            onClick={() => SendtoDetermineUser(0)}\r\n                        >\r\n                            None\r\n                        </Button>\r\n\r\n                    </Box></>   \r\n            ) : (null) }\r\n\r\n        {alertCode === 1 ? <Alert onClose={() => {setalertCode(0)}} severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            <strong>You either denied the transaction or do not have the correct permissions</strong>\r\n            </Alert> : \r\n            \r\n            alertCode === 2 ? <Alert severity=\"info\">\r\n            <AlertTitle>Mining</AlertTitle>\r\n            <strong>Your transaction is mining ... Please wait</strong>\r\n            </Alert> :<></> }\r\n            \r\n        </div>\r\n\r\n        </TabPanel>\r\n        </TabContext>\r\n\r\n            </>\r\n\r\n        \r\n    );\r\n    return <Alert style={{marginTop:\"5vw\"}} severity=\"info\">\r\n    <AlertTitle style={{fontWeight:\"bold\"}}>Prototype Description</AlertTitle>\r\n    Welcome to the prototype! This prototype is designed for an organization which relies on companies like AWS for its storage and computing needs. This interface is\r\n        specifically designed for the Intelligence Community with the intent of authorizing users, connecting them with their parent organization, and then allowing them to upload and download data,\r\n        as well as, send their machine learning models to a powerful computing node that can run their models on GPU and return the results. This prototype takes advantage of the blockchain architecture\r\n        and utilizes decentralized distributed storage/cloud computing where any provider can join as a node and get paid based on how much they store or compute. Say bye to AWS management and protocols,\r\n        distributed storage apps are here to stay. \r\n        <br></br> \r\n    <strong>\r\n        NOTE: this wrapper specifically uses PINATA, IPFS and GOLEM within the pages. IF YOU DO NOT HAVE A METAMASK WALLET YOU WILL NOT BE ABLE TO CONTINUE. This contract is deployed on Rinkeby Testnet.\r\n    </strong>\r\n    </Alert> ;\r\n\r\n    \r\n}\r\n","import { Button, makeStyles } from \"@material-ui/core\"\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport React, { Component }  from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button:{\r\n \r\n\r\n        backgroundColor: \"white\",\r\n        padding: \"1vw 1vw\",\r\n        fontSize: \"0.6vw\",\r\n        bottom: 10,\r\n        left: \"10%\",\r\n        marginLeft: -100,\r\n        position: \"absolute\"\r\n        \r\n    },\r\n\r\n}))\r\n\r\nfunction Providers() {\r\n    \r\n    const classes = useStyles()\r\n    let navigate=useNavigate()\r\n    function Goback(){\r\n        navigate(\"/\",{replace:true})\r\n    }\r\n\r\n  return (\r\n    \r\n    <div style={{ color: \"white\" }}>\r\n        <Button\r\n                    className={classes.button}\r\n                    color=\"primary\"\r\n                    \r\n                    onClick={() => Goback()}\r\n                >\r\n                    Go Back\r\n        </Button>\r\n        <div>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        </div>\r\n\r\n        <Alert severity=\"info\">\r\n            <AlertTitle>TBC</AlertTitle>\r\n            <strong>Hello Providers! Although this is a prototype, you can expect instructions for how to connect to our API here in the future. So next time you are in the area,\r\n                bring your computing power and storage and hop on over for a visit!\r\n            </strong>\r\n        </Alert> <></> \r\n\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Providers","import React from 'react'\nimport { DAppProvider, Rinkeby} from \"@usedapp/core\"\nimport { Header } from \"./components/Header\"\nimport { Container } from \"@material-ui/core\"\nimport { Main } from \"./components/Main\"\nimport Providers from \"./components/providers\"\nimport Users from \"./components/users\"\nimport { HashRouter, Routes, Route, Navigate} from \"react-router-dom\";\n\n//navigate to the right\nfunction ProtectedRouteUsers(props:any){\n  const isAuthenticated = localStorage.getItem(\"isAuthenticatedUser\");\n  return isAuthenticated === \"true\" ? <Users/> : <Navigate to=\"/\" replace />;\n}\n\nfunction ProtectedRouteProviders(props:any){\n  const isAuthenticated = localStorage.getItem(\"isAuthenticatedProvider\");\n  return isAuthenticated === \"true\" ? <Providers/> : <Navigate to=\"/\" replace />;\n}\n\nfunction App() {\n\n  return (\n    \n    <DAppProvider config={{\n      readOnlyChainId: Rinkeby.chainId,\n      notifications: {\n        expirationPeriod: 1000,\n        checkInterval: 1000\n      }\n    }}>\n      <Header />\n      <Container maxWidth=\"md\">\n      <HashRouter>\n      <Routes>\n              <Route path=\"/\" element={<Main/>}/>\n              <Route\n                      path=\"/providers\"\n                      element={\n                        <ProtectedRouteProviders>\n                          <Providers />\n                        </ProtectedRouteProviders>\n                      }\n                    />\n\n              <Route\n                      path=\"/users\"\n                      element={\n                        <ProtectedRouteUsers>\n                          <Users/>\n                        </ProtectedRouteUsers>\n                      }\n                    />\n              \n      </Routes>\n\n      </HashRouter>\n      </Container>\n    </DAppProvider>\n  )\n}\n\nexport default App","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\r\nimport { useEffect, useState } from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport DetermineUser from \"../chain-info/contracts/DetermineUser.json\"\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const UseaddPerson = () => {\r\n    // address\r\n    // abi\r\n    // chainId\r\n    const { chainId } = useEthers()\r\n    \r\n    const { abi } = DetermineUser\r\n    const DetermineUserAddress = chainId ? networkMapping[String(chainId)][\"DetermineUser\"][0] : constants.AddressZero\r\n    const DetermineUserInterface = new utils.Interface(abi)\r\n    const DetermineUserContract = new Contract(DetermineUserAddress, DetermineUserInterface)\r\n    const [userType, setuserType] =useState<number>(0)\r\n    const [path, setPath] =useState(\"/\")\r\n\r\n\r\n    // approve\r\n    const { send: approveaddPerson, state: approveandaddPersonState, resetState: reset } =\r\n        useContractFunction(DetermineUserContract, \"addPerson\", {\r\n            transactionName: \"Add a Person to list\",\r\n        })\r\n    const approvePerson = (name: string, userType: number, org: number) => {\r\n        setuserType(userType)\r\n        return approveaddPerson(name,userType,org)\r\n    }\r\n    \r\n    let navigate=useNavigate()\r\n    useEffect(() => {\r\n    if(userType===1){\r\n        localStorage.setItem(\"isAuthenticatedUser\", \"true\");\r\n        setPath('/users');\r\n    }\r\n    else if(userType!=0 && userType!=1){\r\n        localStorage.setItem(\"isAuthenticatedProvider\", \"true\");\r\n        setPath('/providers');\r\n    }\r\n    if(approveandaddPersonState.status===\"Success\"){\r\n        console.log(approveandaddPersonState)\r\n        navigate(path,{replace:true})\r\n        \r\n    }\r\n    else if (approveandaddPersonState.status===\"Exception\"){\r\n        console.log(\"You either denied the transaction or do not have the correct permissions\")\r\n        return reset()\r\n\r\n    }\r\n    }, [approveandaddPersonState, userType])\r\n\r\n    return { approvePerson, approveandaddPersonState }\r\n    \r\n}","\r\nimport { useEffect} from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport UploadDownload from \"../chain-info/contracts/UploadDownload.json\"\r\n\r\n// convert contract so that it approves downloads and uploads\r\n\r\nexport const ApproveUpload = () => {\r\n    // address\r\n    // abi\r\n    // chainId\r\n    const { chainId } = useEthers()\r\n    \r\n    const { abi } = UploadDownload\r\n    const UploadDownloadAddress = chainId ? networkMapping[String(chainId)][\"UploadDownload\"][0] : constants.AddressZero\r\n\r\n    const UploadDownloadInterface = new utils.Interface(abi)\r\n    const UploadDownloadContract = new Contract(UploadDownloadAddress, UploadDownloadInterface)\r\n    const Amazon = utils.getAddress(\"0xe7D90e39e8AD03b6a2912aDD69120FcAfD3C2E09\")\r\n    const Amazon2 = utils.getAddress(\"0x11AB7A7c6EfB64DcaCF1462990CA13407892A65c\")\r\n\r\n    \r\n    // approve\r\n    const { send: approveuploadRequest, state: approveUploadState, resetState: reset } =\r\n        useContractFunction(UploadDownloadContract, \"UploadApproved\", {\r\n            transactionName: \"Approve the upload\",\r\n        })\r\n    const approveUpload = (addressProvider: number) => {\r\n        if (addressProvider===1){\r\n            return (approveuploadRequest(Amazon))\r\n\r\n        } \r\n        else{\r\n            return (approveuploadRequest(Amazon2))\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n    if(approveUploadState.status===\"Success\"){\r\n        console.log(approveUploadState)\r\n        \r\n    }\r\n    else if (approveUploadState.status===\"Exception\"){\r\n        console.log(\"You either denied the transaction or do not have the correct permissions\")\r\n        return reset()\r\n\r\n    }\r\n    }, [approveUploadState])\r\n\r\n    return { approveUpload, approveUploadState, reset }\r\n    \r\n}","\r\nimport { useEffect} from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport Faucet from \"../chain-info/contracts/Faucet.json\"\r\n\r\n// convert contract so that it approves downloads and uploads\r\n\r\nexport const ApproveFaucet = () => {\r\n    // address\r\n    // abi\r\n    // chainId\r\n    const { chainId } = useEthers()\r\n    \r\n    const { abi } = Faucet\r\n    const FaucetAddress = chainId ? networkMapping[String(chainId)][\"Faucet\"][0] : constants.AddressZero\r\n\r\n    const FaucetInterface = new utils.Interface(abi)\r\n    const FacuetContract = new Contract(FaucetAddress, FaucetInterface)\r\n\r\n\r\n    \r\n    // approve\r\n    const { send: approvefaucetRequest, state: approveFaucetState, resetState: reset2 } =\r\n        useContractFunction(FacuetContract, \"send\", {\r\n            transactionName: \"Approve the faucet\",\r\n        })\r\n    const approveFaucet = () => {\r\n   \r\n        return (approvefaucetRequest())\r\n\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n    if(approveFaucetState.status===\"Success\"){\r\n        console.log(approveFaucetState)\r\n        \r\n    }\r\n    else if (approveFaucetState.status===\"Exception\"){\r\n        console.log(\"You either denied the transaction or do not have the correct permissions\")\r\n        return reset2()\r\n\r\n    }\r\n    }, [approveFaucetState])\r\n\r\n    return { approveFaucet, approveFaucetState, reset2 }\r\n    \r\n}","\r\nimport { useEffect} from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport DetermineUser from \"../chain-info/contracts/DetermineUser.json\"\r\n\r\n// currently adds one user to each of the user types so beta testers can use this\r\n\r\nexport const AddUsersBeta = () => {\r\n    // address\r\n    // abi\r\n    // chainId\r\n    const { chainId } = useEthers()\r\n    \r\n    const { abi } = DetermineUser\r\n    const DetermineUserAddress = chainId ? networkMapping[String(chainId)][\"DetermineUser\"][0] : constants.AddressZero\r\n    const DetermineUserInterface = new utils.Interface(abi)\r\n    const DetermineUserContract = new Contract(DetermineUserAddress, DetermineUserInterface)\r\n    \r\n\r\n\r\n    // approve\r\n    const { send: approvechangeKeys, state: approvechangeKeysState, resetState: reset3 } =\r\n        useContractFunction(DetermineUserContract, \"changePrivateKeys\", {\r\n            transactionName: \"Add a Beta Tester\",\r\n        })\r\n    const approvechange = (NRO: string, CIA: string, NSA: string, AWS: string) => {\r\n        const NRO_address= utils.getAddress(NRO)\r\n        const CIA_address= utils.getAddress(CIA)\r\n        const NSA_address= utils.getAddress(NSA)\r\n        const AWS_address= utils.getAddress(AWS)\r\n        return approvechangeKeys([NRO_address],[CIA_address],[NSA_address],[AWS_address])\r\n    }\r\n    useEffect(() => {\r\n\r\n    if(approvechangeKeysState.status===\"Success\"){\r\n        console.log(approvechangeKeysState)\r\n        \r\n    }\r\n    else if (approvechangeKeysState.status===\"Exception\"){\r\n        console.log(\"You either denied the transaction or do not have the correct permissions\")\r\n        return reset3()\r\n\r\n    }\r\n    }, [approvechangeKeysState])\r\n\r\n    return { approvechange, approvechangeKeysState, reset3}\r\n    \r\n}","import { useEffect} from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport networkMapping from \"../chain-info/deployments/map.json\"\r\nimport UploadDownload from \"../chain-info/contracts/UploadDownload.json\"\r\n\r\n// convert contract so that it approves downloads and uploads\r\n\r\nexport const ApproveDownload = () => {\r\n    // address\r\n    // abi\r\n    // chainId\r\n    const { chainId } = useEthers()\r\n    \r\n    const { abi } = UploadDownload\r\n    const UploadDownloadAddress = chainId ? networkMapping[String(chainId)][\"UploadDownload\"][0] : constants.AddressZero\r\n\r\n    const UploadDownloadInterface = new utils.Interface(abi)\r\n    const UploadDownloadContract = new Contract(UploadDownloadAddress, UploadDownloadInterface)\r\n    const Amazon = utils.getAddress(\"0xe7D90e39e8AD03b6a2912aDD69120FcAfD3C2E09\")\r\n    const Amazon2 = utils.getAddress(\"0x11AB7A7c6EfB64DcaCF1462990CA13407892A65c\")\r\n\r\n    \r\n    // approve\r\n    const { send: approvedownloadRequest, state: approvedownloadState, resetState: resetdownload } =\r\n        useContractFunction(UploadDownloadContract, \"DownloadApproved\", {\r\n            transactionName: \"Approve the download\",\r\n        })\r\n    const approvedownload = (ProviderName: number) => {\r\n        if (ProviderName===1){\r\n            return (approvedownloadRequest(Amazon, \"AWS\"))\r\n\r\n        } \r\n        else{\r\n            return (approvedownloadRequest(Amazon2, \"AWS 2\"))\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n    if(approvedownloadState.status===\"Success\"){\r\n        console.log(approvedownloadState)\r\n        \r\n    }\r\n    else if (approvedownloadState.status===\"Exception\"){\r\n        console.log(\"You either denied the transaction or do not have the correct permissions\")\r\n        return resetdownload()\r\n\r\n    }\r\n    }, [approvedownloadState])\r\n\r\n    return { approvedownload, approvedownloadState, resetdownload }\r\n    \r\n}"],"sourceRoot":""}